package com.inthinc.pro.automation.deviceEnums;

import java.util.EnumSet;
import java.util.HashMap;

import com.inthinc.pro.automation.interfaces.DeviceTypesUnique;

public enum TiwiAttrs implements DeviceTypesUnique {

    TYPE_TOP_SPEED(1),
    TYPE_AVG_SPEED(2),
    TYPE_SPEED_LIMIT(3),
    TYPE_AVG_RPM(4),
    TYPE_RESET_REASON(5),
    TYPE_MANUAL_RESET_REASON(6),
    TYPE_FWDCMD_STATUS(7),
    TYPE_VIOLATION_FLAGS(8),
    TYPE_ENG_TEMP(9),
    TYPE_FUEL_LEVEL(10),
    TYPE_THROTTLE(11),
    TYPE_GPS_SATS_SNR_COUNT(12),
    TYPE_GPS_SATS_SNR_MIN(13),
    TYPE_GPS_SATS_SNR_MAX(14),
    TYPE_DMM_MONITOR_X30(15),
    TYPE_DMM_MONITOR_X50(16),
    TYPE_DMM_MONITOR_X67(17),
    TYPE_DMM_MONITOR_Y30(18),
    TYPE_DMM_MONITOR_Y50(19),
    TYPE_DMM_MONITOR_Y67(20),
    TYPE_GPS_SATS_SNR_MEDIAN(21),
    TYPE_GPS_SATS_PDOP_10X(22),
    TYPE_GPS_SATS_HDOP_10X(23),
    TYPE_SEVERITY(24),
    TYPE_DMM_VERSION(25),
    TYPE_DMM_ORIENTATION(26),
    TYPE_DMM_DVX(27),
    TYPE_DMM_YLEVEL(28),
    TYPE_DMM_ZLEVEL(29),
    TYPE_SMTLS_ENABLED(30),
    TYPE_SMTLS_SECURITY_DISABLED(31),
    TYPE_SMTLS_DEACTIVATE_OVERRIDE(32),
    TYPE_SMTLS_EMU_DOWNLOADED(33),
    TYPE_SMTLS_EMU_NAME_VERIFICATION_OVERRIDE(34),
    TYPE_SMTLS_BUILD_NUM(35),
    TYPE_SMTLS_PERCENT_SUCCESSFUL_REQUEST_RESPONSE_COMMS(36),
    TYPE_OBD_SEATBELT_STATUS(37),
    TYPE_OBD_SEATBELT_AVAIL(38),
    TYPE_SPEED_IN_EXCEPTION_MAP(39),
    TYPE_GPS_MOST_LIKELY_LOCKED(40),
    TYPE_GGA_GPS_QUALITY(41),
    TYPE_GPS_SPEED(42),
    TYPE_OBD_RPM_AVAIL(43),
    TYPE_OBD_SPEED_AVAIL(44),
    TYPE_OBD_VIN_DIGIT_1(45),
    TYPE_DMM_CAL_STATUS(46),
    TYPE_CURRENT_IGN(47),
    TYPE_NUMBER_OF_GPS_REBOOTS(48),
    TYPE_PERCENTAGE_OF_TIME_SPEED_FROM_OBD_USED(49),
    TYPE_PERCENTAGE_OF_TIME_SPEED_FROM_GPS_USED(50),
    TYPE_STATS(51),
    TYPE_AGPS_ERROR_CODE(52),
    TYPE_UNPLUGGED_WHILE_ASLEEP(53),
    LOGOUT_TYPE(54),
    SAT_EPH_CNT(55),
    WITNESS_EVENT_TYPE(56),
    GPINPUT_STATE(57),
    SEATBELT_SRC(58),
    VBCPU_BOOTMODE(59),
    DWNLD_TYPE(60),
    NUM_CONFIG_DUMPS(61),
    NUM_REQSET(62),
    BASE_VER(63),
    TYPE_DISTANCE(129),
    TYPE_MAX_RPM(130),
    TYPE_DELTA_VX(131),
    TYPE_DELTA_VY(132),
    TYPE_DELTA_VZ(133),
    TYPE_VEHICLE_BATTERY(134),
    TYPE_BACKUP_BATTERY(135),
    TYPE_GPS_SATS_SNR_MEAN_100X(136),
    TYPE_GPS_SATS_SNR_STDDEV_100X(137),
    TYPE_GPS_LOCK_TIME(138),
    TYPE_SMTLS_FIRMWARE_REV(139),
    TYPE_COURSE(140),
    TYPE_OBD_RPM(141),
    TYPE_OBD_SPEED(142),
    TYPE_SMTLS_LOGGED_TX_COUNT(143),
    TYPE_SMTLS_OP_MODE(144),
    TYPE_ODOMETER_BY_COORDINATES(145),
    TYPE_A_AND_D_SPACE(146),
    TYPE_APPLICATION_SPACE(147),
    TYPE_BOUNDARY_ID(148),
    TYPE_MPG(149),
    TYPE_LOW_POWER_MODE_TIMEOUT(150),
    TYPE_NUMBER_OF_TIMES_A_SPEEDING_VIOLATION_WAS_EITHER_PREVENTED_OR_SQUELCHED_(165),
    TYPE_PERCENTAGE_OF_POINTS_THAT_PASSED_THE_FILTER_(166),
    TYPE_ZONE_ID(192),
    TYPE_FIRMWARE_VERSION(193),
    TYPE_FWDCMD_ID(194),
    TYPE_FWDCMD_COMMAND(195),
    TYPE_FWDCMD_ERROR(196),
    TYPE_SMTLS_TX_ATTEMPTS(197),
    TYPE_LAT_VERB(198),
    TYPE_LONG_VERB(199),
    TYPE_STREET_ID(200),
    TYPE_SPEED_ID(201),
    TYPE_EMU_HASH_1(202),
    TYPE_EMU_HASH_2(203),
    TYPE_EMU_HASH_3(204),
    TYPE_EMU_HASH_4(205),
    TYPE_OBD_X1_TO_X4(206),
    TYPE_OBD_X5_TO_X8(207),
    TYPE_OBD_X9_TO_X12(208),
    TYPE_OBD_X13_TO_X16(209),
    TYPE_OBD_X17_TO_X20(210),
    TYPE_OBD_X21_TO_X24(211),
    TYPE_OBD_X25_TO_X28(212),
    TYPE_SMTLS_LOGGED_RX_COUNT(213),
    TYPE_OBD_VIN_DIGIT_2_TO_5(214),
    TYPE_OBD_VIN_DIGIT_6_TO_9(215),
    TYPE_OBD_VIN_DIGIT_10_TO_13(216),
    TYPE_OBD_VIN_DIGIT_14_TO_17(217),
    TYPE_LOW_IDLE(219),
    TYPE_HIGH_IDLE(220),
    TYPE_RFID0(222),
    TYPE_RFID1(223),
    TYPE_MPG_DISTANCE(224),
    TYPE_TRIP_DURATION(225),
    TYPE_STRING(255),
    BAD_ERROR(226), // Errors that we want the portal to track

    DRIVER_ID(227),
    TOTAL_AGPS_BYTES(228),
    MAP_HASH(229),
    TOTAL_BYTES_DUMPSET(230),
    SBS_LINK_ID(231),
    CLOSEST_SBS_LINK_ID(232),
    STATIC,

    ;

    private int code;

    private TiwiAttrs() {}

    private TiwiAttrs(int c) {
        code = c;
    }

    public Integer getValue() {
        return code;
    }

    private static HashMap<Integer, TiwiAttrs> lookupByCode = new HashMap<Integer, TiwiAttrs>();

    static {
        for (TiwiAttrs p : EnumSet.allOf(TiwiAttrs.class)) {
            lookupByCode.put(p.getValue(), p);
        }
    }

    public TiwiAttrs valueOf(Integer code) {
        return lookupByCode.get(code);
    }

}
