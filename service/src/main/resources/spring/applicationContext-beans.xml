<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util-2.5.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-2.5.xsd"
	default-autowire="byName">
	<!-- Message Bundles -->
	<!--
		<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="com.inthinc.pro.resources.Messages"
		/> </bean>
	-->

	<context:component-scan base-package="com.inthinc.pro.service.phonecontrol" />
	<context:component-scan base-package="com.inthinc.pro.util" />
	<context:component-scan base-package="com.inthinc.pro.service.reports" />
	<context:component-scan base-package="com.inthinc.pro.service.exceptionMappers" />
	<context:component-scan base-package="com.inthinc.pro.service.params" />
	<context:component-scan base-package="com.inthinc.pro.service.validation" />

	<!--
		TODO Temporary placeholder for QA testing. Remove when going to
		production
	-->
	<context:component-scan base-package="com.inthinc.pro.service.test.mock.aspects" />

	<!-- Phone control adapter factory configuration -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<util:map id="providerStatusUpdateStrategyMap" map-class="java.util.HashMap">
        <entry key="CELL_CONTROL" value="${cellcontrol.update.strategy}"/>
        <entry key="ZOOM_SAFER" value="${zoomsafer.update.strategy}"/>
    </util:map>
	<!-- Cell Control -->
	<bean id="cellcontrolHttpConnectionFactory"
		class="com.inthinc.pro.service.phonecontrol.client.HttpClientFactory">
		<property name="host" value="${cellcontrol.service.host}" />
		<property name="port" value="${cellcontrol.service.port}" />
	</bean>
	<bean id="zoomsaferHttpConnectionFactory"
		class="com.inthinc.pro.service.phonecontrol.client.HttpClientFactory">
		<property name="host" value="${zoomsafer.service.host}" />
		<property name="port" value="${zoomsafer.service.port}" />
	</bean>
	<bean id="systemClock" class="com.inthinc.pro.service.phonecontrol.impl.SystemClock" />

	<bean id="phoneControlAdapterFactory"
		class="com.inthinc.pro.service.phonecontrol.impl.DefaultPhoneControlAdapterFactory">
		<constructor-arg index="0"
			ref="cellcontrolHttpConnectionFactory" />
		<constructor-arg index="1"
			ref="zoomsaferHttpConnectionFactory" />
		<constructor-arg index="2" ref="systemClock" />
	</bean>
	
	<bean id="eventGetter" class="com.inthinc.pro.service.model.EventGetter" init-method="init"/>
	
	<bean id="propertyPlaceholderConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:tiwipro.properties</value>
				<value>file:${CATALINA_HOME}/conf/tiwipro.properties</value>
			</list>
		</property>
	</bean>


	<!-- Global Application Context (singleton scoped) beans -->
	<!--
		<bean id="roles" class="com.inthinc.pro.model.app.Roles"
		init-method="init">
	-->
	<!--    <property name="roleDAO" ref="roleDAO"></property>-->
	<!--   </bean>-->
	<bean id="states" class="com.inthinc.pro.model.app.States"
		init-method="init" />
	<bean id="supportedTimeZones" class="com.inthinc.pro.model.app.SupportedTimeZones"
		init-method="init" />
	<bean id="deviceSensitivityMapping" class="com.inthinc.pro.model.app.DeviceSensitivityMapping"
		init-method="init" />
	<bean id="tiwiproPrincipal" class="com.inthinc.pro.service.security.TiwiproPrincipal"/>
	<!-- RestEasy Config -->
	<!--
		<bean class="com.inthinc.pro.service.impl.SpeedByStreetServiceImpl">
		<property name="sbsUserId" value="${teenproxy.sbsUserId}"/> <property
		name="sbsUserName" value="${teenproxy.sbsUserName}"/> <property
		name="teenServerDAO" ref="sbsDataAccessBean"/> <property
		name="tigerDAO" ref="tigerDao"/> </bean>
	-->

	<!--
		Adapters are declared as @Components do they do not need to be set up
		in XML
	-->
	<bean id="accountService" class="com.inthinc.pro.service.impl.AccountServiceImpl">
		<property name="dao" ref="accountDAOAdapter" />
	</bean>
	<bean id="addressService" class="com.inthinc.pro.service.impl.AddressServiceImpl">
		<property name="dao" ref="addressDAOAdapter" />
	</bean>
	<bean id="deviceService" class="com.inthinc.pro.service.impl.DeviceServiceImpl">
		<property name="dao" ref="deviceDAOAdapter" />
	</bean>
	<bean id="driverService" class="com.inthinc.pro.service.impl.DriverServiceImpl">
		<property name="dao" ref="driverDAOAdapter" />
	</bean>
	<bean id="cellPhoneService" class="com.inthinc.pro.service.phonecontrol.impl.CellPhoneServiceImpl">
		<property name="dao" ref="phoneControlDAOAdapter" />
	</bean>
	<bean id="groupService" class="com.inthinc.pro.service.impl.GroupServiceImpl">
		<property name="dao" ref="groupDAOAdapter" />
	</bean>
	<bean id="personService" class="com.inthinc.pro.service.impl.PersonServiceImpl">
		<property name="dao" ref="personDAOAdapter" />
	</bean>
    <bean id="hazardService" class="com.inthinc.pro.service.impl.RoadHazardServiceImpl">
        <property name="dao" ref="hazardDAOAdapter" />
    </bean>
	<bean id="userService" class="com.inthinc.pro.service.impl.UserServiceImpl">
		<property name="dao" ref="userDAOAdapter" />
	</bean>
	<bean id="vehicleService" class="com.inthinc.pro.service.impl.VehicleServiceImpl">
		<property name="dao" ref="vehicleDAOAdapter" />
		<property name="addressLookup" ref="googleAddressLookupBean" />
	</bean>
	<bean id="voiceService" class="com.inthinc.pro.service.voicexml.VoiceServiceImpl">
		<property name="voxeoAudioURL" value="${voxeoAudioURL}" />
		<property name="alertMessageDAO" ref="alertMessageDAO" />
	</bean>
	<bean id="voiceAckService" class="com.inthinc.pro.service.voicexml.VoiceAckServiceImpl">
		<property name="voxeoAudioURL" value="${voxeoAudioURL}" />
		<property name="alertMessageDAO" ref="alertMessageDAO" />
	</bean>
	<bean id="noteService" class="com.inthinc.pro.service.impl.NoteServiceImpl"/>
	<bean id="eventService" class="com.inthinc.pro.service.impl.EventServiceImpl"/>
	
	<!--
		<bean class="com.inthinc.pro.service.impl.NoteServiceImpl"> <property
		name="mcmService" ref="mcmServiceBean"/> </bean>
	-->

	<!-- Watchdog -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="phoneWatchdogCronTrigger" />
			</list>
		</property>
		<property name="autoStartup" value="${phone.watchdog.enabled}" />
	</bean>

	<bean id="phoneWatchdogCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="phoneWatchdogJob" />
		<property name="cronExpression" value="${phone.watchdog.cron}" />
	</bean>

	<bean id="phoneWatchdogJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="phoneWatchdogImpl" />
		<property name="targetMethod" value="enablePhonesWhenLostComm" />
		<property name="concurrent" value="false" />
	</bean>

	<bean id="reportCriteriaService"
		class="com.inthinc.pro.reports.service.impl.ReportCriteriaServiceImpl">
		<property name="accountDAO" ref="accountDAO" />
		<property name="groupDAO" ref="groupDAO" />
		<property name="scoreDAO" ref="scoreDAO" />
		<property name="mpgDAO" ref="mpgDAO" />
		<property name="vehicleDAO" ref="vehicleDAO" />
		<property name="deviceDAO" ref="deviceDAO" />
		<property name="eventDAO" ref="eventDAO" />
		<property name="redFlagDAO" ref="redFlagDAO" />
		<property name="groupReportDAO" ref="groupReportDAO" />
		<property name="driverDAO" ref="driverDAO" />
		<property name="driveTimeDAO" ref="driveTimeDAO" />
		<property name="waysmartDAO" ref="waysmartDAO" />
		<property name="stateMileageDAO" ref="stateMileageDAO" />
		<property name="addressDAO" ref="addressDAO" />
	</bean>


</beans>
