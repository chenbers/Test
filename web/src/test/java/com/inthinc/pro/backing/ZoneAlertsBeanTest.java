package com.inthinc.pro.backing;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.faces.model.SelectItem;

import org.junit.Ignore;
import org.junit.Test;

import com.inthinc.pro.backing.ZoneAlertsBean.ZoneAlertView;
import com.inthinc.pro.util.MiscUtil;

public class ZoneAlertsBeanTest extends BaseAdminBeanTest<ZoneAlertsBean.ZoneAlertView>
{
    @Override
    protected ZoneAlertsBean getAdminBean()
    {
        return (ZoneAlertsBean) applicationContext.getBean("zoneAlertsBean");
    }

    @Override
    protected String getFilterValue()
    {
        return "zone alert 60";
    }

    // TODO: the following test works about half the time, due to randomness in the IDs generated by MockData.
    @Ignore
    @Override
    @Test
    public void list()
    {
        super.list();
    }

    // TODO: TODO: the following test works when run standalone, but when run as part of the build, an item is added instead of deleted.
    @Ignore
    @Override
    @Test
    public void delete()
    {
        super.delete();
    }

    @Override
    protected void populate(ZoneAlertView editItem, BaseAdminBean<ZoneAlertsBean.ZoneAlertView> adminBean)
    {
        editItem.setCreated(new Date());
        editItem.setName("Zone Alert");
        editItem.setDescription("Toolin' around the zone");
        editItem.setArrival(MiscUtil.randomInt(0, 1) == 1 ? Boolean.TRUE : Boolean.FALSE);
        if (!editItem.getArrival())
            editItem.setDeparture(true);
        else
            editItem.setDeparture(MiscUtil.randomInt(0, 1) == 1 ? Boolean.TRUE : Boolean.FALSE);
        final List<SelectItem> pickedGroups = new ArrayList<SelectItem>();
        pickedGroups.add(new SelectItem("group101"));
        ((ZoneAlertsBean) adminBean).getAssignPicker().setPicked(pickedGroups);
        editItem.setEmailToString("hello@dolly.com");
    }

    @Override
    protected String[] getBatchUpdateFields()
    {
        return new String[] { "name", "description", "assignTo", "emailToString" };
    }
}
