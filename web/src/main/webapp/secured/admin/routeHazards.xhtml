<ui:composition template="/layout/layout.xhtml" 
    xmlns="http://www.w3.org/1999/xhtml" 
    xmlns:ui="http://java.sun.com/jsf/facelets" 
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:rich="http://richfaces.org/rich" 
    xmlns:a4j="http://richfaces.org/a4j" 
    xmlns:f="http://java.sun.com/jsf/core" 
    xmlns:c="http://java.sun.com/jstl/core"
    xmlns:security="http://pro.tiwi.com/jsf/security" 
    xmlns:t="http://myfaces.apache.org/tomahawk">

    <ui:param name="adminSelected" value="current" />
    <ui:param name="title" value="#{messages.adminHeader_routeHazards}" />

    <ui:define name="scripts">
        <style type="text/css">
.col1 {
    width: 95%;
}

.col2 {
    width: 5%;
    vertical-align: top;
}

.latLngText {
    color: #336699;
    background-color: transparent;
    font-family: Verdana, Arial;
    font-weight: bold;
    font-size: xx-small;
    border-style: none;
}
</style>
		<ui:include src="/includes/mapv3/portalMap.xhtml"/>
        <script type="text/javascript" title="inthinc.maps">
        var lengthUnitText = '<h:outputText value="miles" converter="MeasurementTextConverter"></h:outputText>';
        //<![CDATA[
        jQuery.noConflict();
        var map = null;
        var hazardIdSelectedOnmap = null;
        /* CreateMarker(google.maps.LatLng, divID, image or null)
         *  
         * Creates a marker using specified image or
         * default icon if null is passed for iconImage.
         * divID is the id of a DIV you want displayed in the info window. 
         */
        function createMarker(point, divID, iconImage, hazard) {
            //Use passed in image.
            if(iconImage != null){
                marker = new google.maps.Marker({
                    position: point, 
                    map: map,
                    icon: iconImage});
            } else {
                //Use default GoogleMap marker image.
                marker = new google.maps.Marker({
                    map: map,
                    position: point
                });
            }
            if(divID != null) {
                google.maps.event.addListener(marker, 'click', function() {
                    var node = document.getElementById(divID).cloneNode(true);
                    node.style.display = 'block';
                    marker.openInfoWindow(node);
                    //jQuery('#hazards-form\\:hazards-table\\:filterBoundsValue').val(buildLocFilter()).change();
                    hazardIdSelectedOnmap = hazard.hazardID;
                    //addSelectedRowClass(hazard.hazardID);
                });
            } else {
                google.maps.event.addListener(marker, 'click', (function(){
                    var detail = '<dt>#{messages.hazard_description}</dt><dd>'+hazard.details+'</dd>';
                    var type = '<dt>#{messages.hazard_type}</dt><dd>'+hazard.type+'</dd>';
                    var radius = '<dt>#{messages.hazard_radius}</dt><dd>'+hazard.radiusInUnits+' '+lengthUnitText+' </dd>';
                    var endTime = '<dt>#{messages.hazard_endTime}</dt><dd>'+hazard.endTime+'</dd>';
                    var content = '<dl>'+detail+type+radius+endTime+'</dl>';
                    infowindow.setContent(content); 
                    infowindow.setPosition(hazard.point);
                    infowindow.open(map);
                    //jQuery('#hazards-form\\:hazards-table\\:filterBoundsValue').val(buildLocFilter()).change();
                    hazardIdSelectedOnmap = hazard.hazardID;
                    //addSelectedRowClass(hazard.hazardID);
                }));


           }
           return marker;
        }


        function addSelectedRowClass(hazardID){
            jQuery('#hazards-form\\:hazards-table tbody tr').each(function() {
                jQuery(this).removeClass('selected-row');
                jQuery(this).children().removeClass('selected-row');
                if ($(this).cells[1].firstChild.textContent == hazardID ){
                    jQuery(this).addClass('selected-row');
                    jQuery(this).children().addClass('selected-row');
                }
            });
        }

        function createCircle(point, radius, marker) {
            var circleOptions = {
                    map: map,
                    fillColor: '#112233',
                    fillOpacity: .10,
                    strokeColor: '#445566',
                    strokeOpacity: .20,
                    strokeWeight: 2
                };
            var circle = new google.maps.Circle(circleOptions);
            circle.setCenter(point);
            circle.setRadius(radius);
            circle.setMap(map);
            return circle;
        }
        var markers = [];
        var hazards = [];
        var infowindow = new google.maps.InfoWindow();
        google.maps.event.addListener(infowindow, 'closeclick', (function(){
            jQuery('#hazards-form\\:hazards-table tbody tr').each(function() {
                hazardIdSelectedOnmap = null;
                jQuery(this).removeClass('selected-row');
                jQuery(this).children().removeClass('selected-row');
            });
        }));
        
        
        function Hazard(lat, lng, radiusMeters, radiusInUnits, type, endTime, details, status, hazardID){
            this.point = new google.maps.LatLng(lat, lng);
            this.radiusMeters = radiusMeters;
            this.radiusInUnits = radiusInUnits;
            this.type = type;
            this.endTime = endTime;
            this.details = details;
            this.status = status;
            this.hazardID = hazardID;
        }
        Hazard.prototype.drawRadius = function() {
            createCircle(this.point, this.radius);
        }
        
        function buildLocFilter(){
        	return map.getBounds().getSouthWest().lat()+":"+map.getBounds().getSouthWest().lng()
        	   +":"+map.getBounds().getNorthEast().lat()+":"+map.getBounds().getNorthEast().lng();
        }
        //]]>
        </script>
        <script type="text/javascript">
        //<![CDATA[
        var directionsDisplay;
        var directionsService = new google.maps.DirectionsService();
        //var hazardsService = new inthinc.maps.HazardsService();
        var oldDirections = [];
        var currentDirections = null;
        var bounds = new google.maps.LatLngBounds();
        var numberOfWaypoints = 0;
        var units = google.maps.UnitSystem.IMPERIAL;
        var marker;
        var hazard;
        var markerCircle;
        jQuery(document).ready(function($){
            // old initialize() method 
            //console.log('this must happen before you can create markers!  todo: the map center should be determined differently???');
            var origin_textbox = jQuery('#origin');
            var destination_textbox = jQuery('#destination');
            var getDir_btn = jQuery('#submit').attr('disabled', true);
            
			if (map == null) {
				map = inthincMap.init();
				initLayers(map, "listRTH-layerControl");
				inthincMap.center(map, 40, -111);
				inthincMap.zoom(map, 3);
			}

            directionsDisplay = new google.maps.DirectionsRenderer({
                'map' : map,
                'preserveViewport' : true,
                'draggable' : true,
                'polylineOptions' : {
                	'zIndex' : 999,
                	'strokeColor' : '#3300FF',
                	'strokeOpacity' : 0.7,
                	'strokeWeight' : 4 
                }
            });
            
            directionsDisplay.setPanel(document.getElementById('directions_panel'));
            google.maps.event.addListener(directionsDisplay,
                    'directions_changed', function() {
                        if (currentDirections) {
                            oldDirections.push(currentDirections);
                            setUndoDisabled(false);
                        }
                        currentDirections = directionsDisplay.getDirections();
                    });
            setUndoDisabled(true);
            google.maps.event.addListener(map, 'bounds_changed', function(){
                    jQuery('#hazards-form\\:hazards-table\\:filterBoundsValue').val(buildLocFilter()).change();
                });

          //]]> 
           <ui:repeat value="#{hazardsBean.tableData}" var="hazard">
               var markerLatLng = new google.maps.LatLng(#{hazard.lat}, #{hazard.lng});
               var testUnits = '<h:outputText  value="mile" converter="MeasurementTextConverter"></h:outputText>';
               var formattedEndTime = '<h:outputText value="#{hazard.endTime}"><f:convertDateTime pattern="#{messages.dateTimeFormat}" timeZone="#{hazardsBean.user.person.timeZone}" /></h:outputText>';
               hazard = new Hazard(#{hazard.lat}, #{hazard.lng}, #{hazard.radiusMeters}, #{hazard.radiusInUnits}, '#{messages[hazard.type]}', formattedEndTime, '#{hazard.description}', '#{messages[hazard.status]}', #{hazard.hazardID});
               marker = createMarker(markerLatLng, null , "#{request.contextPath}/images/ico_warning.png", hazard); //'hazard#{hazard.hazardID}' for divID
               markers.push(marker);
               hazards.push(hazard); //todo: this might be unnecessary... since the hazard is in the marker???  
               createCircle(markerLatLng, #{hazard.radiusMeters}, marker); 
            </ui:repeat>
          //<![CDATA[
            jQuery('#addDestination').click(function addDestination(){
                var waypointIndex = numberOfWaypoints;
                   jQuery('#waypointContainer').append('<div id="waypoint'+waypointIndex+'Container"><input type="text" name="waypoint" class="waypoint" id="waypoint'+waypointIndex+'" style="width: 80%; float: left;" /><div id="rmWaypoint'+waypointIndex+'" style="float: right; padding: 2px;"><img id="rmWaypointImg'+waypointIndex+'" style="border: 0px; vertical-align: middle;" src="/tiwipro/images/ico_addAnother_remove.png"/></div></div>');
                   jQuery('#waypoint'+waypointIndex).val(jQuery('#destination').val());
                   jQuery('#destination').val('');
                   jQuery('#rmWaypoint'+waypointIndex).click(function(){
                       jQuery('#waypoint'+waypointIndex+'Container').empty();
                   });
                   numberOfWaypoints++;
                   return false;
            });
             
            jQuery('#showDirOptions').click(function showHideOptions(){
                var options = jQuery('#d_options');
                var theLink = jQuery('#showDirOptions');
                var showText = '#{messages.hazard_showDirOpts}';
                var hideText = '#{messages.hazard_hideDirOpts}';
                if(options.is(':visible')){
                    options.hide();
                    theLink.html(showText);
                } else {
                    options.show();
                    theLink.html(hideText);
                }
            });
            jQuery('#dopt_mikm_m').click(function(){
                units = google.maps.UnitSystem.IMPERIAL;
                if(!getDir_btn.attr('disabled'))
                    calcRouteNoParams();
            });
            jQuery('#dopt_mikm_k').click(function(){
                units = google.maps.UnitSystem.METRIC;
                if(!getDir_btn.attr('disabled'))
                    calcRouteNoParams();
            });

            getDir_btn.enableIfValid = function enableIfValid(){
                var hasNotChanged = (origin_textbox.val() == '#{messages.hazard_origin}') || (destination_textbox.val() == '#{messages.hazard_destination}');
                var empty = (origin_textbox.val() == '') || (destination_textbox.val() == '');
                getDir_btn.attr('disabled', hasNotChanged || empty);
            }
            
            origin_textbox.focus(function(){
                if(origin_textbox.val() == '#{messages.hazard_origin}') {
                    origin_textbox.val('');
                }
            }).focusout(function(){
                if(origin_textbox.val() == '') {
                    origin_textbox.val('#{messages.hazard_origin}');
                }
                getDir_btn.enableIfValid();
            }).keyup(function(){
            	getDir_btn.enableIfValid();
            });
            
            destination_textbox.focus(function(){
                if(destination_textbox.val() == '#{messages.hazard_destination}') {
                    destination_textbox.val('');
                }
            }).focusout(function(){
                if(destination_textbox.val() == '') {
                    destination_textbox.val('#{messages.hazard_destination}');
                } 
                getDir_btn.enableIfValid();
            }).keyup(function(){
                getDir_btn.enableIfValid();
            });
            var boundsFilter = jQuery('#hazards-form\\:hazards-table\\:filterBoundsValue');
        });
        
        var waypoints = [];
        function calcRouteNoParams(){
            waypoints = [];
            jQuery('.waypoint').each(function(index, value){
                var point = jQuery(this).val();
                waypoints.push({
                    location: point,
                    stopover:true
                });
            });

            calcRoute(jQuery('#origin').val(), jQuery('#destination').val(), waypoints, jQuery('#ddopt_avhwy').is(':checked'), jQuery('#dopt_avtoll').is(':checked'), units);
        }
        function calcRoute(start, end, waypoints, avoidhwy, avoidtolls, units) {
            var request = {
                origin : start,
                destination : end,
                waypoints : waypoints,
                travelMode : google.maps.DirectionsTravelMode.DRIVING,
                unitSystem: units,
                avoidHighways: avoidhwy,
                avoidTolls: avoidtolls
            };
            directionsService.route(request, function(response, status) {
                if (status == google.maps.DirectionsStatus.OK) {
                    directionsDisplay.setDirections(response);
                    var boundsCount = 0;
                    directionsDisplay.getDirections().routes.forEach(function(element, index, array){
                        if(boundsCount == 0) {
                            bounds = element.bounds;
                        } else {
                            bounds.extend(element.bounds.getNorthEast());
                            bounds.extend(element.bounds.getSouthWest());
                        }
                        map.fitBounds(bounds);
                    });
                }
            });
        }

        function undo() {
            currentDirections = null;
            directionsDisplay.setDirections(oldDirections.pop());
            if (!oldDirections.length) {
                setUndoDisabled(true);
            }
        }

        function setUndoDisabled(value) {
            $('undo').disabled = value;
        }
        //]]> 
        </script>
        <script type="text/javascript">
        //<![CDATA[ 
        function getAddress(index){
            var address = document.getElementById('hazards-form:hazards-table:'+index+':hazardAddress');
            var lat = document.getElementById('hazards-form:hazards-table:'+index+':hazardLat');
            var lng = document.getElementById('hazards-form:hazards-table:'+index+':hazardLng');
            
            if (address.innerHTML.length==0){
                //first is literal
                if( lat.value >= -90 && lat.value <= 90 &&  lng.value >= -180 &&  lng.value <= 180){
                    reverseGeocodeTripAddress(new google.maps.LatLng(lat.value,lng.value),address,index);
                } else {
                    //console.log('bad lat:lng'+lat+":"+lng);
                }
            }
         }
        var geocoder = new google.maps.Geocoder();
        function reverseGeocodeTripAddress(latlng,addressElement,index){
            var request = {location: latlng};
            geocoder.geocode(request, 
                    function(result, geoStatus){
                        if (!result || geoStatus != google.maps.GeocoderStatus.OK) {
                            //console.log('// no response typically== bad lat:lng'+lat+":"+lng);
                        } else {
                            addressElement.innerHTML = result[0].formatted_address;
                        }
                    });
          }
        //]]> 
        </script>
    </ui:define>

    <ui:define name="content">
        <a4j:region id="main">
            <table width="920" border="0" cellspacing="0" cellpadding="0" align="center" style="margin: 0 auto 0 auto;">
                <tr>
                    <td valign="top" width="130"><ui:include src="/includes/navigation/adminSideNav.xhtml">
                            <ui:param name="selectedAction" value="go_adminRouteHazard" />
                            <ui:param name="parentAction" value="go_adminHazards" />
                            <ui:param name="context" value="hazards" />
                        </ui:include></td>
                    <td valign="top">
                        <!-- START PANEL -->
                        <div class="">
                            <div class="panel_nw">
                                <div class="panel_title">
                                    <span class="hazards"> <h:outputText value="#{messages.adminHeader_routeHazards}" />
                                    </span> <span class="panel_links"> <a4j:status id="refresh_ajax_status" for="main">
                                            <f:facet name="start">
                                                <h:outputText>
                                                    <img src="#{facesContext.externalContext.request.contextPath}/images/progress2.gif" align="top" />&#160;
                                                </h:outputText>
                                            </f:facet>
                                        </a4j:status>
                                    </span>
                                </div>
                            </div>

                            <div class="panel_w">
                                <div class="panel_content">
                                    <div id="map-canvas" style="float: left; width: 100%; height: 330px"></div>
                                    <div style="float: right; width: 100%; overflow: auto">
                                        <button id="undo" style="display: block; margin: auto" onclick="undo()">#{messages.hazard_undo}</button>
                                        <div id="to_from" style="float: left; width: 49%;">
                                        <div id="directionsTitle" class="panel_title" style="background: none; height: auto;"><h:outputText value="#{messages.hazard_directions}" /></div>
                                            <form action="javascript:void(0);" onsubmit="calcRouteNoParams(); return false;">
                                                <input type="text" id="origin" value="#{messages.hazard_origin}" style="width: 80%" />
                                                <div id="waypointContainer"></div>
                                                <input type="text" id="destination" value="#{messages.hazard_destination}" style="width: 80%" /> <input type="submit" id="submit"
                                                    value="#{messages.hazard_findRoute}" style="width: 80%" /><br /> <a href="javascript:void(0)" id="addDestination">#{messages.hazard_addDestination}</a>
                                                <a href="javascript:void(0)" id="showDirOptions">#{messages.hazard_showDirOpts}</a>
                                                <div id="d_options" style="display: none;">
                                                    <div id="d_optph">
                                                        <div style="display: none;"></div>
                                                        <div style="">
                                                            <div id="d_options_d_tpl">
                                                                <div style="float: left; white-space: nowrap;">
                                                                    <div style="overflow: auto;">
                                                                        <input type="checkbox" id="ddopt_avhwy" name="ddopt_avhwy" style="float: left;" /> <label for="ddopt_avhwy">#{messages.directions_avoidHighways}</label>
                                                                    </div>
                                                                    <div style="overflow: auto;">
                                                                        <input type="checkbox" id="dopt_avtoll" name="dopt_avtoll" style="float: left;" /> <label for="dopt_avtoll">#{messages.directions_avoidTolls}</label>
                                                                    </div>
                                                                </div>
                                                                <div id="d_options_mikm_d" style="float: right;">
                                                                    <span class="secondary" id="d_options_mikm_tpl"> 
                                                                        <a href="javascript:void(0)" id="dopt_mikm_m" style="">#{messages.mi_label}</a>
                                                                        / 
                                                                        <a href="javascript:void(0)" id="dopt_mikm_k" style="">#{messages.km_label}</a>
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div style="display: none;">
                                                            <div>
                                                                <div id="d_options_mikm_w"></div>
                                                            </div>
                                                        </div>
                                                        <div style="display: none;">
                                                            <div>
                                                                <div id="d_options_mikm_b"></div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </form>
                                            <div id="directions_panel" style="float: left;"></div>
                                        </div>

                                        <div id="hazards_panel" style="float: right; width: 49%;">
                                            <a4j:form id="hazards-form">
                                                <h:panelGroup layout="block">
                                                    <a4j:outputPanel id="tablePanel" ajaxRendered="true">
                                                    <div id="directionsTitle" class="panel_title" style="background: none; height: auto;"><h:outputText value="#{messages.hazard_nearRoute}" /></div>
                                                    <rich:dataTable value="#{hazardsBean.tableData}" id="hazards-table" var="item" rowKeyVar="index" styleClass="datagrid filterabledatagrid"
                                                        rowClasses="tableOdd,tableEven" cellspacing="1" rows="100" width="100%">

                                                        <!-- Data -->
                                                        <rich:column id="mapColumn" filterMethod="#{hazardsBean.filterBounds}">
                                                            <f:facet name="header">
                                                                <h:panelGroup>
                                                                    <h:inputText value="#{hazardsBean.filterBoundsValue}" id="filterBoundsValue" height="1px" width="1px" style="opacity:0.01; height: 1px; width: 1px;">
                                                                    <a4j:support event="onchange" ignoreDupResponses="true" requestDelay="700" reRender="tablePanel" focus="input" oncomplete="addSelectedRowClass(hazardIdSelectedOnmap);"/>
                                                                    </h:inputText>
                                                                </h:panelGroup>
                                                            </f:facet>
                                                            <h:graphicImage value="/images/ico_map.png" id="mapIcon" styleClass="map-icon">
                                                            </h:graphicImage>
                                                            <rich:toolTip id="aaddressToolTip" mode="ajax" rendered="#{hazardsBean.addressFormat == 1}">
                                                                <h:outputText id="address" value="#{item.latLng}" converter="#{latLngAddressConverter}" />
                                                                <h:outputText id="addressLocation" value="#{hazardsBean.item.location}" converter="#{latLngAddressConverter}" />
                                                            </rich:toolTip>
                                                            <rich:toolTip id="baddressToolTip" mode="ajax" onshow="getLink(#{index})" rendered="#{hazardsBean.addressFormat == 2}">
                                                                <h:inputHidden id="linkText" value="#{item.latLng}" converter="#{latLngAddressConverter}" />
                                                                <a id="link_#{index}" href="" target="_blank">#{messages.livefleet_address}</a>
                                                            </rich:toolTip>
                                                            <rich:toolTip id="caddressToolTip" mode="client" onshow="getAddress(#{index})" rendered="#{hazardsBean.addressFormat == 3}">
                                                                <h:inputHidden id="hazardLat" value="#{item.latitude}" />
                                                                <h:inputHidden id="hazardLng" value="#{item.longitude}" />
                                                                <h:outputText id="hazardAddress" />
                                                            </rich:toolTip>
                                                        </rich:column>

                                                        <rich:column id="hazardID"  style="display: hidden;">
                                                            <h:outputText value="#{item.hazardID}" style="display: none;"/>
                                                        </rich:column>

                                                        <rich:column id="description" sortBy="#{item.description}">
                                                            <f:facet name="header">
                                                                <h:outputText value="#{messages.hazard_description}" />  
                                                            </f:facet>
                                                            <h:outputText value="#{item.description}" />
                                                        </rich:column>


                                                        <rich:column id="type" sortBy="#{item.type}">
                                                            <f:facet name="header">
                                                                <h:outputText value="#{messages.hazard_type}" />
                                                            </f:facet>
                                                            <h:outputText value="#{messages[item.type]}" />
                                                        </rich:column>

                                                        <rich:column id="endTime" sortBy="#{item.endTime}">
                                                            <f:facet name="header">
                                                                <h:outputText value="#{messages.hazard_endTime}" />
                                                            </f:facet>
                                                            <h:outputText value="#{item.endTime}">
                                                                <f:convertDateTime pattern="#{messages.dateTimeFormat}" timeZone="#{item.user.person.timeZone}" />
                                                            </h:outputText>
                                                        </rich:column>
                                                    </rich:dataTable>
                                                    </a4j:outputPanel>
                                                </h:panelGroup>
                                            </a4j:form>
                                        </div>
                                    </div>
                                    <div style="clear: both"> </div>
                                </div>
                                <div style="clear: both"> </div>
                            </div>
                        </div> <!-- END PANEL -->
                    </td>
                </tr>
            </table>
        </a4j:region>
        <!-- START LOCATION MODAL -->
        <rich:modalPanel id="hazardLocationModal" width="540" height="450" headerClass="popupHeader" onshow="initializeHazardMap(hazardBean.item.lat, hazardBean.item.lng);">
            <f:facet name="header">
                <h:outputText id="mapModalHeader" value="#{messages.hazard_location}" />
            </f:facet>
            <f:facet name="controls">
                <h:graphicImage value="/images/modal_close.png" style="cursor:pointer" onclick="Richfaces.hideModalPanel('hazardLocationModal')" />
            </f:facet>

            <div class="eventmap-border">
                <div id="address-canvas" style="width: 522px; height: 355px; border: 0"></div>
            </div>

            <div class="popupactions">
                <a4j:commandButton id="hazardTableNo" value="#{messages.button_close}" onclick="Richfaces.hideModalPanel('hazardLocationModal')" styleClass="left">
                    <span class="cancel"> <h:outputText value="#{messages.button_close}" />
                    </span>
                </a4j:commandButton>
            </div>
        </rich:modalPanel>
        <!-- END LOCATION MODAL -->
    </ui:define>
</ui:composition>
