<ui:composition template="/layout/layout.xhtml" 
	xmlns="http://www.w3.org/1999/xhtml" 
	xmlns:ui="http://java.sun.com/jsf/facelets" 
	xmlns:h="http://java.sun.com/jsf/html"
    xmlns:rich="http://richfaces.org/rich" 
    xmlns:a4j="http://richfaces.org/a4j" 
    xmlns:f="http://java.sun.com/jsf/core" 
  	xmlns:security="http://pro.tiwi.com/jsf/security"
    xmlns:pretty="http://ocpsoft.com/prettyfaces">

    <ui:param name="notificationsSelected" value="current" />
	
    <ui:define name="scripts">
    	<ui:include src="/includes/mapv3/portalMap.xhtml"/>
		<a4j:loadScript src="/js/mapv3/zone.js" />
		
        <script type="text/javascript">
	  	  var map = null;
	  	  var zone = null;

	  	  function initializeMap(lat, lng, zonePoints, divID) 
          {
			var location = new google.maps.LatLng(lat, lng);
  			if (map == null) {
				map = inthincMap.init({
					'canvasID' : 'address-canvas',
					'center' : {
						'lat' : lat,
						'lng' : lng
					},
					'zoom' : 15
				});
				initLayers(map, "#{context}-layerControl");
  			}
  			else {
  				inthincMap.clearMarkers(map);
  				if (zone != null) {
  					zone.clear();
  					zone = null;
  				}
  			}


			// Note: only zone events have zonePoints
			if (zonePoints) {
				zone = new Zone(zonePoints);
				var zoneCenter = zone.displayOnMap(map, true).getCenter();
            	if (divID) {
					inthincMap.createInfoWindowFromDiv(map, divID, zoneCenter);
            	}
            	else {
					inthincMap.createMarker(map, { position: zoneCenter});            		
            	}
			}
            else{
            	if (divID) {
   		    	  inthincMap.createInfoWindowFromDiv(map, divID, location);
            	}
            	else {
                	inthincMap.createMarker(map, { position: location});
            	}
	        }

          }
	  	  
          function initializeTable()
          {
              jQuery(".clickable-map-icon").click(function(){
                  var address = jQuery(this).siblings("[id$='addressToolTip']").find("[id$='ddress']").text();
                  jQuery('#mapModalHeader').text("#{messages.driver_event_location}: " + address);
                });
              jQuery('.rich-table-row:has(a[name*="excluded"]) a').css("color","#cccccc");
              jQuery('.rich-table-row:has(a[name*="excluded"]) td').css("color","#cccccc");
          }
          

        </script>
		<rich:panel id="script">
          <script type="text/javascript">
          
  		 function getLink(index){
			 
      		var link = document.getElementById("link_"+index);
      		var linkText = document.getElementById("#{context}-form:#{context}:"+index+":linkText").value;
      		if (link.href.length==0){
	      		
				link.href = linkText;
			}
		 }
 		 function getAddress(index){
			 
	      		var address = document.getElementById("#{context}-form:#{context}:"+index+":eventAddress");
   				var lat = document.getElementById("#{context}-form:#{context}:"+index+":eventLat");
   				var lng = document.getElementById("#{context}-form:#{context}:"+index+":eventLng");
	      		
	      		if (address.innerHTML.length==0){
					if( lat.value &gt;= -90 &amp;&amp; lat.value &lt;= 90 &amp;&amp;  lng.value &gt;= -180 &amp;&amp;  lng.value &lt;= 180){
						reverseGeocodeTripAddress(new google.maps.LatLng(lat.value,lng.value),address,index);
					}
					else {						
						lkFrZn(lat.value,lng.value,index);
					}
	      		}
			 
		 }
       

          function reverseGeocodeTripAddress(latlng, addressElement, index){
			inthincMap.reverseGeocode(map, latlng.lat(), latlng.lng(), function(result, status) {
		    	  if (status != google.maps.GeocoderStatus.OK) {
			        	lkFrZn(latlng.lat(),latlng.lng(),index);	  
		    	  }
		    	  else {
		              addressElement.innerHTML = result[0].formatted_address;
		    	  }
			});
       		
          }
          
          function checkForZoneName(zoneName) {              
              var nameAndIndex = zoneName.split(",");
              var name = nameAndIndex[0];
              var indx = nameAndIndex[1];
              
        	  var addressEl = document.getElementById("#{context}-form:#{context}:"+indx+":eventAddress");                        
 			  addressEl.innerHTML = name;
          }
          
      		</script>
          </rich:panel>
    </ui:define>

    <ui:define name="subnavigation">
        <div class="sub_nav">
            <div class="sub_nav-bg">
                <ul>
                    <li id="redflagtab" class="#{customSubSelected}">
                        <pretty:link id="#{context}-redFlags" mappingId="redFlags"><span>#{messages.notes_tab_redflag}</span></pretty:link>
                    </li>
                    <li id="safetytab" class="#{safetySubSelected}">
                        <pretty:link id="#{context}-safety" mappingId="safety"><span>#{messages.notes_tab_safety}</span></pretty:link>
                    </li>
                    <li id="diagnosticstab" class="#{diagnosticsSubSelected}">
                        <pretty:link id="#{context}-diagnostics" mappingId="diagnostics"><span>#{messages.notes_tab_diagnostics}</span></pretty:link>
                    </li>
                    <ui:fragment rendered="#{personBean.accountIsMaintenance}">
                    <li id="maintenancetab" class="#{maintenanceSubSelected}">
                        <pretty:link id="#{context}-maintenance" mappingId="maintenance"><span>#{messages.notes_tab_maintenance}</span></pretty:link>
                    </li>
                    </ui:fragment>
                    <li id="zoneEventstab" class="#{zonesSubSelected}">
                        <pretty:link id="#{context}-zoneEvents" mappingId="zoneEvents"><span>#{messages.notes_tab_zone}</span></pretty:link>
                    </li>
					<security:authorize ifAnyGranted="ROLE_HOSADMIN,ROLE_HOSACCESS">
                    <li id="hosEventstab" class="#{hosSubSelected}">
                        <pretty:link id="#{context}-hosEvents" mappingId="hosEvents"><span>#{messages.notes_tab_hos}</span></pretty:link>
                    </li>
                    </security:authorize>
                    <li id="emergencytab" class="#{emergencySubSelected}">
                        <pretty:link id="#{context}-emergency" mappingId="emergency"><span>#{messages.notes_tab_emergency}</span></pretty:link>
                    </li>
                    <li id="crashhistorytab" class="#{crashhistorySubSelected}">
                        <pretty:link id="#{context}-crashHistory" mappingId="crashHistory"><span>#{messages.notes_tab_crashhistory}</span></pretty:link>
                    </li>
                    <ui:fragment rendered="#{personBean.waysmartSupported}">
                    <li id="driverLoginstab" class="#{driverLoginsSubSelected}" >
                        <pretty:link id="#{context}-driverLogins" mappingId="driverLogins"><span>#{messages.notes_tab_driverlogins}</span></pretty:link>
                    </li>          
                    </ui:fragment>
                </ul>
            </div>
        </div>
    
    <rich:modalPanel id="eventLocationModal" width="540" height="450" headerClass="popupHeader" 
    	onshow="initializeMap(event.parameters.lat, event.parameters.lng, event.parameters.zonePoints, event.parameters.noteID);"
    	resizeable="false">
        <f:facet name="header">
            <h:outputText id="mapModalHeader" value="#{messages.driver_event_location}" />
        </f:facet>
        <f:facet name="controls">
            <h:graphicImage value="/images/modal_close.png" style="cursor:pointer" onclick="Richfaces.hideModalPanel('eventLocationModal')" />
        </f:facet>

        <div class="eventmap-border">
        <div id="address-canvas" style="width: 522px; height: 355px; border: 0"></div>
        </div>

		<h:form>
        <div class="popupactions">
        	<a4j:commandButton id="close" type="button" value="#{messages.button_close}" onclick="Richfaces.hideModalPanel('eventLocationModal')" styleClass="left">
            	<span class="cancel"> 
            		<h:outputText value="#{messages.button_close}" /> 
            	</span>
        	</a4j:commandButton>
        </div>
        </h:form>
    </rich:modalPanel>
    
    
    <a4j:form id="lookForZone">
		<a4j:jsFunction name="lkFrZn" action="#{addressBean.lookForZone}" oncomplete="checkForZoneName('#{addressBean.zoneName}')">
			<a4j:actionparam name="latitude" assignTo="#{addressBean.zoneLat}"/>
			<a4j:actionparam name="longitude" assignTo="#{addressBean.zoneLng}"/>
			<a4j:actionparam name="elemIndex" assignTo="#{addressBean.elemIndex}"/>			
		</a4j:jsFunction>
	</a4j:form>   
    
    </ui:define>
    
</ui:composition>