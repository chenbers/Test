<ui:composition template="/layout/layout.xhtml" 
				xmlns="http://www.w3.org/1999/xhtml" 
				xmlns:ui="http://java.sun.com/jsf/facelets"
  				xmlns:h="http://java.sun.com/jsf/html" 
  				xmlns:rich="http://richfaces.org/rich"
  				xmlns:a4j="http://richfaces.org/a4j"
  				xmlns:iwi="http://pro.tiwi.com/jsf"
  				xmlns:f="http://java.sun.com/jsf/core"
                xmlns:c="http://java.sun.com/jstl/core"
	            xmlns:t="http://myfaces.apache.org/tomahawk"
                xmlns:pretty="http://ocpsoft.com/prettyfaces"
                xmlns:security="http://pro.tiwi.com/jsf/security">
                
    <ui:define name="scripts">
		<script src="http://maps.google.com/maps?file=api&amp;v=s&amp;key=#{gmBean.key}&amp;hl=#{localeBean.locale.language}" type="text/javascript"></script>
        <script src="#{request.contextPath}/js/mapstraction/mapstraction.js" type="text/javascript"></script>
	    <script language="javascript" type="text/javascript" src="#{request.contextPath}/js/jquery.flot.js"></script>

	</ui:define>
	<ui:define name="content">
		<style>
			.section {
				width: 460px;
				vertical-align: top;
				text-align: left;
				padding: 5px;
			}
			.section_title {
				font: bold 10px Verdana, Arial, Helvetica, sans-serif;
				border-bottom: 1px solid #333;
				padding: 10px 5px 5px;
				margin-bottom:10px;
				margin-top:10px;
				text-align: left;
			}
			.col1 {
				padding-right: 30px;
			}
			.col2{
			}
			
			.datagrid th {			
				background: #BFD292;
				padding: 0;
				text-align: center;
			}
			.datagrid > tbody > tr > td {
				text-align: center;
			}
		</style>
	    <script language="javascript" type="text/javascript">
	     var baseIcon = new GIcon();
			baseIcon.iconSize = new GSize(25, 30);
			baseIcon.iconAnchor = new GPoint(9, 30);
			baseIcon.infoWindowAnchor = new GPoint(5, 1);

			var map, vehicleMarker, polyline, plot, tripPoints = [];

			
			function initMap() {
				if (GBrowserIsCompatible()) {					
					 GUnload();
					 var point = new GLatLng(#{crashReportBean.crashReport.lat},#{crashReportBean.crashReport.lng})
					 map = new GMap2(document.getElementById("map-canvas"));	
					 map.setMapType(G_NORMAL_MAP);
					 map.setCenter(point,12);
					 map.setUIToDefault();				 

					 var vehicleIcon = new GIcon(baseIcon);
					 vehicleIcon.image = "#{facesContext.externalContext.request.contextPath}/images/googleMapIcons/icon_2.png";
					 markerOptions = { icon:vehicleIcon };					 					 
					 vehicleMarker = new GMarker(point, markerOptions);
					 map.addOverlay(vehicleMarker);
				}
                      
             }           
		</script>
		
		<t:saveState value="#{crashReportBean}"/>
		
    
    
		<div style="width: 940px; margin:auto">
			<div class="panel_nw">
				<div class="panel_title">
					#{messages.crashReport}
				</div>
			</div>
			<div class="panel_w">
				<div class="panel_content">
					<h:form>
						<ul id="grid_nav" style="margin: 0;">
							 <li class="l text"><a4j:htmlCommandLink action="pretty:crashHistory" value="#{messages.crashReport_backToCrashHistory}" /></li>
		                   	 <security:authorize ifAnyGranted="ROLE_CUSTOMUSER,ROLE_SUPERUSER">
			                   	 <li class="r">
			                      <h:outputText value=" " />
			                      <pretty:link mappingId="editCrashReport">
			                      	 <button class="left">
			                      	 	<span class="edit"><h:outputText value="#{messages.button_edit}" /></span>
			                      	 </button>
			                      	 <f:param value="#{crashReportBean.crashReport.crashReportID}"/>
			                      </pretty:link>
			                   	 </li>
		                   	 </security:authorize>
		                </ul>
	                </h:form>

					<h:panelGrid columns="2" columnClasses="section">
						<h:panelGroup>
							<div class="section_title"><h:outputText value="#{messages.crashReport_crashDetails}" /></div>
							<h:panelGrid columns="2" columnClasses="col1,col2" cellspacing="2px" cellpadding="4px">								
								<h:outputText value="#{messages.crashReport_status}:" />
								<h:outputText value="#{messages[crashReportBean.crashReport.crashReportStatus]}"/>								
								
								<h:outputText value="#{messages.crashReport_date}:" />
								<h:outputText value="#{crashReportBean.crashReport.date}" style="font-weight: bold;">	
									<f:convertDateTime pattern="#{messages.dateFormat}" timeZone="#{crashReportBean.person.timeZone}" />
								</h:outputText>								
								
					            <h:outputText value="#{messages.crashReport_vehicle}:" />
								<h:outputText value="#{crashReportBean.crashReport.vehicle.name}"/>									
								
	                            <h:outputText value="#{messages.crashReport_driver}:" />
								<h:outputText value="#{crashReportBean.crashReport.driver.person.fullName}"/>	
								
								<h:outputText value="#{messages.crashReport_weather}:" />	
								<h:outputText value="#{crashReportBean.crashReport.weather}"/>									
								
								<h:outputText value="#{messages.crashReport_occupantCount}:" />
								<h:outputText value="#{crashReportBean.crashReport.occupantCount}"/>							
							</h:panelGrid>	
						</h:panelGroup>
						<h:panelGroup>					
							<div class="section_title"><h:outputText value="#{messages.crashReport_description}" /></div>
							<div class="panel_content">#{crashReportBean.crashReport.description}</div>		
						</h:panelGroup>
						<h:panelGroup>
							<div class="section_title"><h:outputText value="#{messages.crashReport_crashDetails}" /></div>
							<h:form>
								<rich:dataTable id="crashPointTable" value="#{crashReportBean.crashReport.crashDataPoints}" var="dataPoint" styleClass="datagrid" rowClasses="tableOdd,tableEven" rows="20" cellspacing="1" width="100%">
								<f:facet name="header">
									<rich:columnGroup>
										<rich:column rowspan="2">#{messages.crashReport_time}</rich:column>
										<rich:column rowspan="2">#{messages.crashReport_rpm}</rich:column>
										<rich:column colspan="2">#{messages.crashReport_speed}</rich:column>
										<rich:column colspan="2">#{messages.crashReport_seatBelt}</rich:column>
										<rich:column breakBefore="true">#{messages.crashReport_obd}</rich:column>
										<rich:column>#{messages.crashReport_gps}</rich:column>
										<rich:column>#{messages.crashReport_available}</rich:column>
										<rich:column>#{messages.crashReport_state}</rich:column>
									</rich:columnGroup>
								</f:facet>
									<rich:column>
										<h:outputText value="#{dataPoint.time}">
											<f:convertDateTime pattern="#{messages.longTimeFormat}" timeZone="#{crashReportBean.person.timeZone}" />
										</h:outputText>
									</rich:column>
									<rich:column>
										#{dataPoint.rpm}
									</rich:column>
									<rich:column>
										<h:outputText value="#{dataPoint.obdSpeed}" converter="MphToKphConverter" />#{' '}<h:outputText value="mph" converter="MeasurementTextConverter" />		
									</rich:column>
									<rich:column>
										<h:outputText value="#{dataPoint.gpsSpeed}" converter="MphToKphConverter" />#{' '}<h:outputText value="mph" converter="MeasurementTextConverter" />									
									</rich:column>
									<rich:column>
										<h:graphicImage value="#{dataPoint.seatBeltAvailable == true ? '/images/icon_checkmark.png' : '/images/ico_x.png'}" /> 
									</rich:column>
									<rich:column>
										<h:graphicImage value="#{dataPoint.seatBeltAvailable == false ? '' : dataPoint.seatBeltState == true ? '/images/icon_checkmark.png' : '/images/ico_x.png'}" /> 
									</rich:column>
								</rich:dataTable>	
							    <rich:datascroller for="crashPointTable" styleClass="dataScroller" reRender="crashPointTable"/>
						    </h:form>
						</h:panelGroup>
					
						<h:panelGroup>
							<div class="section_title"><h:outputText value="#{messages.crashReport_crashLocation}" /></div>
							<div id="map-canvas" style="width: 100%; height: 300px; border: 0"></div>
							<script type="text/javascript">initMap();</script>
							
							
				
						    <div id="placeholder" style="width:100%;height:300px"></div>
														    
						    <p> <span id="eventinfo"></span></p>
						    <p> <span id="iteminfo"></span></p>
						    <p> <span id="posinfo"></span></p>
						</h:panelGroup>
					</h:panelGrid>
					


				</div>
			</div>
			<div class="panel_sw">
				<div class="panel_statusbar"></div>
			</div>
		</div>
        
		<script language="javascript" type="text/javascript">
			
			jQuery(function () {

				var gpsSpeed = [], obdSpeed = [], rpm = [];

				/* TODO: Retrieve data via JSON. Remove all the uses of new */
		    	<a4j:repeat value="#{crashReportBean.crashReport.crashDataPoints}" var="point">
		    		gpsSpeed.push([#{point.time.time}, #{point.gpsSpeed}, new GLatLng(#{point.lat}, #{point.lng})])
		    		obdSpeed.push([#{point.time.time}, #{point.obdSpeed}, new GLatLng(#{point.lat}, #{point.lng})]);
		    		rpm.push([#{point.time.time}, #{point.rpm}, new GLatLng(#{point.lat}, #{point.lng})]);
					tripPoints.push(new GLatLng(#{point.lat}, #{point.lng}));
		    	</a4j:repeat>

				polyline = new GPolyline(tripPoints, "#0000ff", 6);
				map.addOverlay(polyline);

		        /*<![CDATA[*/
			    plot = jQuery.plot(jQuery("#placeholder"),
			           [ { data: gpsSpeed, label: "#{messages.crashReport_gpsSpeed}"}, {data: obdSpeed, label: "#{messages.crashReport_obdSpeed}"}, {data: rpm, label: "#{messages.crashReport_rpm}", yaxis: 2} ],
			           { xaxis: { mode: "time", timeformat: "%h:%M:%S" },
		            	 y2axis: { tickFormatter: function (v, axis) { return v.toFixed(0) }},
			           	 lines: { show: true },
			             points: { show: false },
			             selection: { mode: "xy" },
			             grid: { hoverable: true, clickable: true, autoHighlight: false, mouseActiveRadius: 100 }
			           });		

	            var previousIndex;
			    jQuery("#placeholder").bind("plothover", function (event, pos, item) {	
		        	jQuery("#posinfo").text("Position: ");
		            jQuery.each(pos, function(name, value) {
			        	jQuery("#posinfo").append("<p>" + name + ": " + value + " </p> ");
		            });
		            if (item) {			            
			            if(previousIndex) {
							for ( i = 0; i < 3; i++) {
								plot.unhighlight(i,previousIndex);
							}
	            		}
			            vehicleMarker.setLatLng(item.datapoint[2]);

						for ( i = 0; i < 3; i++) {
							plot.highlight(i,item.dataIndex);
						}
						previousIndex = item.dataIndex;
			        	jQuery("#iteminfo").text("item: ");
			            jQuery.each(plot, function(name, value) {
				        	jQuery("#iteminfo").append("<p>" + name + ": " + value + " </p> ");
			            });
		            }
			    });
	            /*]]>*/
			});
		</script>
		<script type="text/javascript">

        /*<![CDATA[*/
        function getClosestPointFromList(latLng,latLngArray){
        	if(latLng){
                var closestLatLng, difference, returnIndex; 
                for (i = 0; i < latLngArray.length; i++){
					var latDifference = Math.abs(latLng.lat() - latLngArray[i].lat());
					var lngDifference = Math.abs(latLng.lng() - latLngArray[i].lng());
					var tempDifference = latDifference + lngDifference;
					
					if(difference == null || tempDifference <= difference){
							closestLatLng = latLngArray[i];
							difference = tempDifference;
							returnIndex = i;
					}
                }
                if(closestLatLng) {
                    return {index: returnIndex, latlng: closestLatLng};
                }
        	}
            return  {index: 0, latlng: latLngArray[latLngArray.length - 1]};
        }
        var closestPoint = null;
		GEvent.addListener(map, 'mousemove', function(point) {
			if(closestPoint) {
		    	 for ( i = 0; i < 3; i++) {
		     	 	plot.unhighlight(i,closestPoint.index);
		     	 }
			}
			closestPoint = getClosestPointFromList(point, tripPoints);
			
			vehicleMarker.setLatLng(closestPoint.latlng);
			for ( i = 0; i < 3; i++) {
				plot.highlight(i,closestPoint.index);
			}
		}); // for detecting if mouse is above displayed route

		   	 	/*]]>*/
		</script>
		
	</ui:define>
</ui:composition>