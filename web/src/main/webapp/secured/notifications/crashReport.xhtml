<ui:composition template="/layout/layout.xhtml" 
				xmlns="http://www.w3.org/1999/xhtml" 
				xmlns:ui="http://java.sun.com/jsf/facelets"
  				xmlns:h="http://java.sun.com/jsf/html" 
  				xmlns:rich="http://richfaces.org/rich"
  				xmlns:a4j="http://richfaces.org/a4j"
  				xmlns:iwi="http://pro.tiwi.com/jsf"
  				xmlns:f="http://java.sun.com/jsf/core"
                xmlns:c="http://java.sun.com/jstl/core"
	            xmlns:t="http://myfaces.apache.org/tomahawk"
                xmlns:pretty="http://ocpsoft.com/prettyfaces"
                xmlns:security="http://pro.tiwi.com/jsf/security">
                
    <ui:define name="scripts">
		<script src="http://maps.google.com/maps?file=api&amp;v=#{gmBean.version}&amp;key=#{gmBean.key}&amp;hl=#{localeBean.locale.language}" type="text/javascript"></script>
        <script src="#{facesContext.externalContext.request.contextPath}/js/mapstraction/mapstraction.js" type="text/javascript"></script>
	    <script language="javascript" type="text/javascript" src="#{facesContext.externalContext.request.contextPath}/js/jquery.flot.js"></script>
	</ui:define>
	<ui:define name="content">
		<style>
			.section {
				width: 460px;
				vertical-align: top;
				text-align: left;
			}
			.section_title {
				font: bold 10px Verdana, Arial, Helvetica, sans-serif;
				border-bottom: 1px solid #333;
				padding: 10px 5px 5px;
				margin-bottom:10px;
				margin-top:10px;
				text-align: left;
			}
		</style>
		<script type="text/javascript">
			var map = null;
			var vehicleMarker = null;
			function initMap() {
				if (GBrowserIsCompatible()) {					
					 GUnload();
					 var point = new GLatLng(#{crashReportBean.crashReport.lat},#{crashReportBean.crashReport.lng})
					 map = new GMap2(document.getElementById("map-canvas"));	
					 map.setMapType(G_NORMAL_MAP);
					 map.setCenter(point,12);
					 map.setUIToDefault();
					 vehicleMarker = new GMarker(point);
					 map.addOverlay(vehicleMarker);
				}                           
             }           

            function updateVehicleMarker(point) {
                /*
                var latlng = vehicleMarker.getLatLng();
                point = new GLatLng(latlng.lat() + 0.0005, latlng.lng() + 0.0005);
                */
                vehicleMarker.setLatLng(point);
            }
            
		</script>
		
		
    
    
		<div style="width: 940px; margin:auto">
			<div class="panel_nw">
				<div class="panel_title">
					#{messages.crashReport}
				</div>
			</div>
			<div class="panel_w">
				<div class="panel_content">
					<h:form>
						<ul id="grid_nav" style="margin: 0;">
							 <li class="l text"><a4j:htmlCommandLink action="pretty:crashHistory" value="#{messages.crashReport_backToCrashHistory}" /></li>
		                   	 <security:authorize ifAnyGranted="ROLE_CUSTOMUSER,ROLE_SUPERUSER">
			                   	 <li class="r">
			                      <h:outputText value=" " />
			                      <pretty:link mappingId="editCrashReport">
			                      	 <button class="left">
			                      	 	<span class="edit"><h:outputText value="#{messages.button_edit}" /></span>
			                      	 </button>
			                      	 <f:param value="#{crashReportBean.crashReport.crashReportID}"/>
			                      </pretty:link>
			                   	 </li>
		                   	 </security:authorize>
		                </ul>
	                </h:form>

					<h:panelGrid columns="2" columnClasses="section">
						<h:panelGroup>
							<div class="section_title"><h:outputText value="#{messages.crashReport_crashDetails}" /></div>
							<h:panelGrid columns="2">								
								<h:outputText value="#{messages.crashReport_status}:" />
								<h:outputText value="#{messages[crashReportBean.crashReport.crashReportStatus]}"/>								
								
								<h:outputText value="#{messages.crashReport_date}:" />
								<h:outputText value="#{crashReportBean.crashReport.date}">	
									<f:convertDateTime pattern="#{messages.dateTimeFormat}" timeZone="#{crashReportBean.person.timeZone}" />
								</h:outputText>								
								
					            <h:outputText value="#{messages.crashReport_vehicle}:" />
								<h:outputText value="#{crashReportBean.crashReport.vehicle.name}"/>									
								
	                            <h:outputText value="#{messages.crashReport_driver}:" />
								<h:outputText value="#{crashReportBean.crashReport.driver.person.fullName}"/>	
								
								<h:outputText value="#{messages.crashReport_weather}:" />	
								<h:outputText value="#{crashReportBean.crashReport.weather}"/>									
								
								<h:outputText value="#{messages.crashReport_occupantCount}:" />
								<h:outputText value="#{crashReportBean.crashReport.occupantCount}"/>							
							</h:panelGrid>	
						</h:panelGroup>
						<h:panelGroup>					
							<div class="section_title"><h:outputText value="#{messages.crashReport_description}" /></div>
							<div class="panel_content">#{crashReportBean.crashReport.description}</div>		
						</h:panelGroup>
					</h:panelGrid>
					
					
					<h:panelGrid columns="2" columnClasses="section">
						<h:panelGroup>
							<div class="section_title"><h:outputText value="#{messages.crashReport_crashDetails}" /></div>
							<rich:dataTable value="#{crashReportBean.crashReport.crashDataPoints}" var="dataPoint" styleClass="datagrid" rowClasses="tableOdd,tableEven" cellspacing="1" width="100%">
							<f:facet name="header">
								<rich:columnGroup>
									<rich:column rowspan="2">#{messages.crashReport_dateTime}</rich:column>
									<rich:column rowspan="2">#{messages.crashReport_rpm}</rich:column>
									<rich:column colspan="2">Speed</rich:column>
									<rich:column colspan="2">Seat Belt</rich:column>
									<rich:column breakBefore="true">OBD</rich:column>
									<rich:column>GPS</rich:column>
									<rich:column>Avail</rich:column>
									<rich:column>On</rich:column>
								</rich:columnGroup>
							</f:facet>
								<rich:column>
									<h:outputText value="#{dataPoint.time}">
										<f:convertDateTime pattern="#{messages.timeFormat}" timeZone="#{crashReportBean.person.timeZone}" />
									</h:outputText>
								</rich:column>
								<rich:column>
									#{dataPoint.rpm}
								</rich:column>
								<rich:column>
									#{dataPoint.obdSpeed}
								</rich:column>
								<rich:column>
									#{dataPoint.gpsSpeed}
								</rich:column>
								<rich:column>
									#{dataPoint.seatBeltAvailable}
								</rich:column>
								<rich:column>
									#{dataPoint.seatBeltState}
								</rich:column>
							</rich:dataTable>
						</h:panelGroup>
					
						<h:panelGroup>
							<div class="section_title"><h:outputText value="#{messages.crashReport_crashLocation}" /></div>
							<div id="map-canvas" style="width: 100%; height: 300px; border: 0"></div>
							<script type="text/javascript">initMap();</script>
							
							
				
						    <div id="placeholder" style="width:100%;height:200px"></div>
								
						    <p id="hoverdata">Mouse hovers at
						    (<span id="x">0</span>, <span id="y">0</span>). </p>
						    
						    <p><span id="clickdata"></span></p>
						    <p> <span id="eventinfo"></span></p>
						    <p> <span id="iteminfo"></span></p>
						    <p> <span id="posinfo"></span></p>
						</h:panelGroup>
					</h:panelGrid>
					


				</div>
			</div>
			<div class="panel_sw">
				<div class="panel_statusbar"></div>
			</div>
		</div>
        
		<script language="javascript" type="text/javascript">

			jQuery(function () {

				var gpsSpeed = [], obdSpeed = [], rpm = [];
		    	<a4j:repeat value="#{crashReportBean.crashReport.crashDataPoints}" var="point">
		    		gpsSpeed.push([#{point.time.time}, #{point.gpsSpeed}, #{point.lat}, #{point.lng}])
		    		obdSpeed.push([#{point.time.time}, #{point.obdSpeed}, #{point.lat}, #{point.lng}]);
		    		rpm.push([#{point.time.time}, #{point.rpm}, #{point.lat}, #{point.lng}]);
		    	</a4j:repeat>
			
			    var plot = jQuery.plot(jQuery("#placeholder"),
			           [ { data: gpsSpeed, label: "GPS Speed"}, {data: obdSpeed, label: "OBD Speed"}, {data: rpm, label: "RPM", yaxis: 2} ],
			           { xaxis: { mode: "time", timeformat: "%h:%M:%S" },
		            	 y2axis: { tickFormatter: function (v, axis) { return v.toFixed(0) }},
			           	 lines: { show: true },
			             points: { show: true },
			             selection: { mode: "xy" },
			             grid: { hoverable: true, clickable: true, autoHighlight: true, mouseActiveRadius: 100 }
			           });
		           
			    function showTooltip(x, y, contents) {
			        jQuery('<div id="tooltip">' + contents + '</div>').css( {
			            position: 'absolute',
			            display: 'none',
			            top: y + 5,
			            left: x + 5,
			            border: '1px solid #fdd',
			            padding: '2px',
			            'background-color': '#fee',
			            opacity: 0.80
			        }).appendTo("body").fadeIn(200);
			    }

			    var previousPoint = null;
			    jQuery("#placeholder").bind("plothover", function (event, pos, item) {
				    /*
		        	jQuery("#eventinfo").text("Event: ");
		            jQuery.each(event, function(name, value) {
			        	jQuery("#eventinfo").append("<p>" + name + ": " + value + " </p> ");
		            });
		            */
		            
		        	jQuery("#posinfo").text("Position: ");
		            jQuery.each(pos, function(name, value) {
			        	jQuery("#posinfo").append("<p>" + name + ": " + value + " </p> ");
		            });
		            if (item) {
			        	jQuery("#iteminfo").text("Item: ");
			            jQuery.each(item, function(name, value) {
				        	jQuery("#iteminfo").append("<p>" + name + ": " + value + " </p> ");
			            });
		                if (previousPoint != item.datapoint) {
		                    previousPoint = item.datapoint;
		                    
		                    jQuery("#tooltip").remove();
		                    var x = item.datapoint[0].toFixed(2),
		                        y = item.datapoint[1].toFixed(2);
		                    
		                    showTooltip(item.pageX, item.pageY,
		                                item.series.label + " of " + x + " = " + y);
		                }
		                updateVehicleMarker(new GLatLng(item.datapoint[2],item.datapoint[3]));
		            }
		            else {
		                jQuery("#tooltip").remove();
		                previousPoint = null;           
		            }      
			    });
			
			    /*jQuery("#placeholder").bind("plotclick", function (event, pos, item) {
			        if (item) {
			            jQuery("#clickdata").text("You clicked point " + item.dataIndex + " in " + item.series.label + ". ");
			            plot.highlight(item.series, item.datapoint);
			        }
			    });*/
			});
		</script>
		
	</ui:define>
</ui:composition>