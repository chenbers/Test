<ui:composition template="/layout/layout.xhtml"
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:rich="http://richfaces.org/rich"
	xmlns:a4j="http://richfaces.org/a4j"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:security="http://pro.tiwi.com/jsf/security"
    xmlns:tiwiprofn="http://pro.tiwi.com/jsffunctions"
    xmlns:t="http://myfaces.apache.org/tomahawk"
    xmlns:c="http://java.sun.com/jstl/core"
    xmlns:pretty="http://ocpsoft.com/prettyfaces">

	<ui:param name="notificationsSelected" value="current" />
    <ui:param name="title" value="#{reportScheduleBean.add ? messages.adminHeader_addReportSchedule : (reportScheduleBean.batchEdit ? messages.adminHeader_editReportSchedules : messages.adminHeader_editReportSchedule)}"/>
	<ui:param name="helpFile" value="Add_Edit_a_Report.htm" />
   
    <ui:define name="scripts">
		<script src="http://maps.google.com/maps?file=api&amp;v=#{gmBean.version}&amp;key=#{gmBean.key}&amp;hl=#{localeBean.locale.language}" type="text/javascript"></script>
        <script src="#{facesContext.externalContext.request.contextPath}/js/mapstraction/mapstraction.js" type="text/javascript"></script>
         <script src="#{facesContext.externalContext.request.contextPath}/js/mapGeocode.js" type="text/javascript"></script>
        <script src="http://dev.virtualearth.net/mapcontrol/mapcontrol.ashx?v=6"></script>
	</ui:define>
    
	<ui:define name="content">
		<style>
			.section {
				width: 460px;
				vertical-align: top;
				text-align: left;
			}
			
			.section_fields{
				width: 460px;
				vertical-align: top;
				text-align: left;
				padding: 3px;
				padding-left: 10px;
			}
			
			.section_title {
				font: bold 10px Verdana, Arial, Helvetica, sans-serif;
				border-bottom: 1px solid #333;
				padding: 10px 5px 5px;
				margin-bottom:10px;
				margin-top:10px;
				text-align: left;
			}
		</style>
		
		<t:saveState value="#{crashReportBean}"></t:saveState>
		
		<script type="text/javascript">
				var map = null;
				var tripPoints = null;
				var crashMarker = null;
				var eventListener = null;
				
				function placeCrashMarker(lat,lng){
					if(map){
						if(crashMarker)
							map.removeOverlay(crashMarker);
						var point = new GLatLng(lat,lng);
			            crashMarker = createCrashMarker(point);
						map.addOverlay(crashMarker);
				    }
	            }
	
	            function createCrashMarker(latLng){
	                var baseIcon = new GIcon();
	    			baseIcon.iconSize = new GSize(21, 20);
	    			baseIcon.iconAnchor = new GPoint(6, 20);
	    			baseIcon.infoWindowAnchor = new GPoint(5, 1);
	            	var icon = new GIcon(baseIcon);
	            	icon.image = "#{facesContext.externalContext.request.contextPath}/images/icon_crash.png";
	            	var options = { icon:icon };
		       	 	marker = new GMarker(latLng, options);
	            	return marker;
	            }

	            function createMarker(latLng,imageURL){
	                var baseIcon = new GIcon();
	    			baseIcon.iconSize = new GSize(21, 20);
	    			baseIcon.iconAnchor = new GPoint(6, 20);
	    			baseIcon.infoWindowAnchor = new GPoint(5, 1);
	            	var icon = new GIcon(baseIcon);
	            	icon.image = imageURL;
	            	var options = { icon:icon };
		       	 	var marker = new GMarker(latLng, options);
	            	return marker;
	            }

	            /*<![CDATA[*/
		            function getClosestPointFromList(latLng,latLngArray){
		            	if(latLng){
			                var closestLatLng = null;
			                var difference = null;
			                for (i = 0;i < latLngArray.length;i=i+1){
								var latDifference = Math.abs(latLng.lat() - latLngArray[index].lat());
								var lngDifference = Math.abs(latLng.lng() - latLngArray[index].lng());
								var tempDifference = latDifference + lngDifference;
								if(difference == null){
										closestLatLng = latLngArray[0];
								}
			                }
			
			                if(closestLatLng)
			                    return closestLatLng;
		            	}
		
		                return latLngArray[latLngArray.length - 1];
		            }
	            /*]]>*/
            
		</script>
		
		<!-- initMap script - needs to be refreshed (use initMap panel to refresh script) -->
		<rich:panel id="initMap">
			<script type="text/javascript">
				function initMap()
	            {
					if (GBrowserIsCompatible()) {
						 GUnload();
						 map = new GMap2(document.getElementById("map-canvas"));
	
		
		                 map.addControl(new GMapTypeControl());
						 map.setMapType(G_NORMAL_MAP);
						 <ui:fragment rendered="#{crashReportBean.crashReport.lat eq null}">
						 	 map.setCenter(new GLatLng('#{crashReportBean.groupHierarchy.topGroup.mapLat}','#{crashReportBean.groupHierarchy.topGroup.mapLng}'),12);
						 </ui:fragment>
						 map.addControl(new GLargeMapControl());

						 if(eventListener)
						 	GEvent.removeListener(eventListener);

						 <ui:fragment rendered="#{crashReportBean.useExistingTrip eq false}">
						 	 eventListener = GEvent.addListener(map,"click", function(overlay, latLng) {     
								  if (latLng) { 
								    updateLocation(latLng.lat(),latLng.lng());
								  }
							 });
						 </ui:fragment>

						 <ui:fragment rendered="#{crashReportBean.crashReport.lat ne null}">
						 	map.setCenter(new GLatLng('#{crashReportBean.crashReport.lat}','#{crashReportBean.crashReport.lng}'),15);
						 	updateLocation('#{crashReportBean.crashReport.lat}','#{crashReportBean.crashReport.lng}');
						 </ui:fragment>
					}
	                          
	            } 
			</script>
		</rich:panel>
		
		<!-- displayTrip script - needs to be refreshed (use displayTrip panel to refresh script) -->
		<rich:panel id="displayTrip">
			<script type="text/javascript">
					function displayTrip(){
						var polyline;
						var marker;
				
	
						map.clearOverlays();
						
						var points = new Array();
						var index = 0;
	   					<ui:repeat value="#{crashReportBean.selectedTrip.route}" var="latLng">
	   						points[index] = new GLatLng(#{latLng.lat}, #{latLng.lng}),
	   						index++;
	   					</ui:repeat>
	   					polyline = new GPolyline(points,"#0000ff", 6);
	   					map.addOverlay(polyline);
						map.addOverlay(createMarker(points[0],"#{facesContext.externalContext.request.contextPath}/images/ico_start.png"));

						
						
	   					updateLocation(points[index-1].lat(),points[index-1].lng());
	   					
	
	   					var bounds = polyline.getBounds();
	   					map.setCenter(bounds.getCenter(),map.getBoundsZoomLevel(bounds));
	
	   					tripPoints = points;
					}
			</script>
		</rich:panel>
		
		
		<table width="940" border="0" cellspacing="0"
			cellpadding="0" align="center" style="margin: 0 auto 0 auto;">
			<tr>
				<td valign="top">
				<a4j:form id="edit-form">
				<div class="">
					<div class="panel_nw">
					<div class="panel_title">
						<span class="email"><h:outputText value="#{messages.crashReport_add}" /></span>
						<span class="panel_links"></span></div>
					</div>

					<div class="panel_w"><!-- MAIN CONTENT -->
						<div class="panel_content">
		                
						<rich:messages globalOnly="true"
							errorClass="error" fatalClass="error" warnClass="warning"
							infoClass="info" styleClass="msg" />
							
						<ul id="grid_nav" style="margin: 0;">
		                   	<li class="r">
		                      <h:commandButton action="#{crashReportBean.save}" styleClass="left"><span class="save"><h:outputText value="#{messages.button_save}" /></span></h:commandButton>
		                      <h:outputText value=" " /><h:commandButton action="#{crashReportBean.cancelEdit}" immediate="true" styleClass="left"><span class="cancel"><h:outputText value="#{messages.button_cancel}" /></span></h:commandButton>
		                    </li>
		                </ul>
		                
		                <ui:fragment rendered="${tiwiprofn:messagesAvailable()}">
		                  <dl id="display-form:j_id122" class="rich-messages msg" style="">
		                     <dt class="error">
		                        <h:outputFormat value="#{messages.error_validationMsg}">
		                           <f:param value="${tiwiprofn:getMessageCount()}"/>
		                        </h:outputFormat>
		                        
		                     </dt>
		                  </dl>
		                </ui:fragment>
		                
		                <h:panelGrid columns="2" columnClasses="section">
		                	<h:panelGroup>
		                		<div class="section_title"><h:outputText value="#{messages.crashReport_crashSummary}" /></div>
		                		<h:panelGrid columns="2" columnClasses="section_fields">
		                			<h:panelGroup>
		                				<h:outputText value="#{messages.crashReport_status}" />
										<h:outputText styleClass="required" value=" *" />
		                			</h:panelGroup>
		                			<h:panelGroup>
		                				<rich:message for="statusSelectOne" errorClass="field-error" fatalClass="field-error" warnClass="field-warning" infoClass="field-info" styleClass="field-msg" />
		                				<h:selectOneMenu id="statusSelectOne" value="#{crashReportBean.crashReport.crashReportStatus}" converter="SimpleBeanConverter" required="true" requiredMessage="#{messages.required}">
											<f:selectItems value="#{crashReportBean.crashReportStatusAsSelectItems}"/>
										</h:selectOneMenu>
		                			</h:panelGroup>
		                			<h:panelGroup>
		                				<h:outputText value="#{messages.crashReport_date}" />
										<h:outputText styleClass="required" value=" *" />
		                			</h:panelGroup>
		                			<h:panelGroup>
		                				<rich:message for="dateCalendar" errorClass="field-error" fatalClass="field-error" warnClass="field-warning" infoClass="field-info" styleClass="field-msg" />
										<rich:calendar id="dateCalendar" datePattern="MMM dd yyyy hh:mm a" value="#{crashReportBean.crashReport.date}" required="true" requiredMessage="#{messages.required}" timeZone="#{crashReportBean.person.timeZone}"/>
		                			</h:panelGroup>
		                			<h:panelGroup>
		                				<h:outputText value="#{messages.crashReport_vehicle}" />
	                                    <h:outputText styleClass="required" value=" *" />
		                			</h:panelGroup>
		                			<h:panelGroup>
		                				<rich:message for="vehicle" errorClass="field-error" fatalClass="field-error" warnClass="field-warning" infoClass="field-info" styleClass="field-msg" />
										<h:selectOneMenu id="vehicle" value="#{crashReportBean.crashReport.vehicleID}" required="true" requiredMessage="#{messages.required}">
											<f:selectItems value="#{crashReportBean.vehiclesAsSelectItems}"/>
										</h:selectOneMenu>
		                			</h:panelGroup>
		                			<h:panelGroup>
		                				<h:outputText value="#{messages.crashReport_driver}" />
	                                    <h:outputText styleClass="required" value=" *" />
		                			</h:panelGroup>
		                			<h:panelGroup>
		                				<rich:message for="driver" errorClass="field-error" fatalClass="field-error" warnClass="field-warning" infoClass="field-info" styleClass="field-msg" />
										<h:selectOneMenu id="driver" value="#{crashReportBean.crashReport.driverID}" required="true" requiredMessage="#{messages.required}">
											<f:selectItems value="#{crashReportBean.driversAsSelectItems}"/>
										</h:selectOneMenu>
		                			</h:panelGroup>
		                			<h:panelGroup>
		                				<h:outputText value="#{messages.crashReport_weather}" />
		                			</h:panelGroup>
		                			<h:panelGroup>
		                				<rich:message for="weather" errorClass="field-error" fatalClass="field-error" warnClass="field-warning" infoClass="field-info" styleClass="field-msg" />
										<h:inputText id="weather" value="#{crashReportBean.crashReport.weather}" styleClass="text" size="30" maxlength="30"></h:inputText>	
		                			</h:panelGroup>
		                			<h:panelGroup>
		                				<h:outputText value="#{messages.crashReport_occupantCount}" />
		                			</h:panelGroup>
		                			<h:panelGroup>
		                				<rich:inputNumberSpinner minValue="0" maxValue="50" value="#{crashReportBean.crashReport.occupantCount}"/>
		                			</h:panelGroup>
									<h:outputText value="#{messages.crashReport_existingTrip}"/>
									<a4j:region>
										<h:selectOneRadio value="#{crashReportBean.useExistingTrip}" layout="lineDirection">
											<f:selectItem itemValue="FALSE" itemLabel="No"/>
											<f:selectItem itemValue="TRUE" itemLabel="Yes"/>
											<a4j:support event="onchange" reRender="mapPanel,initMap" oncomplete="initMap()" limitToList="true"/>
										</h:selectOneRadio>
									</a4j:region>
		                		</h:panelGrid>
		                	</h:panelGroup>
		                	<h:panelGroup>
		                		<div class="section_title"><h:outputText value="#{messages.crashReport_description}" /></div>
		                		<h:panelGrid columns="1" columnClasses="section">
		                			<div class="instructions"><h:outputText styleClass="instructions" value="#{messages.crashReport_descriptionExplanation}" /></div>
									<h:inputTextarea cols ="50" rows="10" value="#{crashReportBean.crashReport.description}" />
		                		</h:panelGrid>
		                	</h:panelGroup>
		                </h:panelGrid>
					   
						
						 <div class="spacer"></div>
						 <rich:message for="crashLocation" errorClass="field-error" fatalClass="field-error" warnClass="field-warning" infoClass="field-info" styleClass="field-msg" />
						 <div class="add_section_title">
						 	<h:outputText value="#{messages.crashReport_crashLocation}" />
						 	<h:outputText styleClass="required" rendered="#{empty crashReportBean.crashReport.crashDataPoints}" value=" *" />
						 </div>
						 <rich:panel id="crashLocationHiddleInputPanel">
						 	<h:inputHidden id="crashLocation" value="#{crashReportBean.crashReport.lat}" required="true" requiredMessage="#{messages.required}"/>
						 </rich:panel>
						 
						 <rich:panel rendered="#{empty crashReportBean.crashReport.crashDataPoints}">
							 <table width="850" style="padding:10px">
							 	<tr>
							 		
							   </tr>
							   <tr>
							   		<td colspan="2">
							   			<rich:panel id="mapPanel">
							   				
											<table width="870">
												<tr>
													<td colspan="2">
														<ui:fragment rendered="#{crashReportBean.useExistingTrip ne 'true'}">
															#{messages.group_find_address}
															<input type="text" size="42"
																id="addressTextBox"
																value="" tabindex="6"/>
																<a4j:commandButton immediate="true" tabindex="7" onclick="showAddressWithAccuracy(document.getElementById('addressTextBox').value);" styleClass="left">
																	<span class="search">
																		#{messages.group_locate}
																	</span>
																</a4j:commandButton>
															
														</ui:fragment>
													</td>
												</tr>
												<tr>
													<ui:fragment rendered="#{crashReportBean.useExistingTrip eq 'true'}">
														<td width="400" valign="top">
															<h:panelGrid id="driverVehicleSearchPanel" columnClasses="section_fields" columns="2" width="400x">
																<h:outputText value="#{messages.crashReport_searchType}"></h:outputText>
																<a4j:region>
																	<h:selectOneRadio value="#{crashReportBean.selectedEntityType}" layout="lineDirection">
																		<f:selectItem itemValue="ENTITY_DRIVER" itemLabel="#{messages.crashReport_driver}"/>
																		<f:selectItem itemValue="ENTITY_VEHICLE" itemLabel="#{messages.crashReport_vehicle}"/>
																		<a4j:support event="onchange" reRender="driverVehicleSearchPanel" limitToList="true"/>
																	</h:selectOneRadio>
																</a4j:region>
																<h:outputText value="#{messages.crashReport_driverVehicleSearch}"></h:outputText>
																<a4j:region id="driverVehicleSearchRegion">
																	<h:selectOneMenu value="#{crashReportBean.entityID}">
																		<f:selectItems value="#{crashReportBean.entitysAsSelectItems}"/>
																		<a4j:support event="onchange" reRender="tripsListPanel" action="#{crashReportBean.loadTrips}"/>
																	</h:selectOneMenu>
																</a4j:region>
															</h:panelGrid>
															<rich:spacer height="10px"/>
															<a4j:region>
																<rich:panel id="tripsListPanel">
																		<div class="datagrid_panel" style="width: 400px">
																			<div class="instructions"><h:outputText styleClass="instructions" value="#{messages.crashReport_tripSelection}" /></div>
																			<rich:spacer height="5px"/>
																			<rich:extendedDataTable value="#{crashReportBean.tripList}"
																			        rowClasses="tableOdd,tableEven"
																			        styleClass="datagrid"
																			        selectionMode="single"
																			        enableContextMenu="false"
																			        selectedClass="selected-row"
																					var="trip" width="390px" height="440px">
																				<a4j:support event="onRowClick" reRender="displayTrip" oncomplete="displayTrip()">
												                                    <f:setPropertyActionListener value="#{trip}" target="#{crashReportBean.selectedTrip}" />
												                                </a4j:support>
																				<rich:column sortBy="#{trip.startTime}" sortOrder="ASCENDING" sortable="false" width="160px">
																					<f:facet name="header"><h:outputText value="#{messages.crashReport_startTime}"></h:outputText></f:facet>
																					<h:outputText value="#{trip.startTime}">
																						<f:convertDateTime pattern="MMM dd yyyy hh:mm a z" timeZone="#{crashReportBean.person.timeZone}"/>
																					</h:outputText>
																				</rich:column>
																				<rich:column width="160px">
																					<f:facet name="header"><h:outputText value="#{messages.crashReport_endTime}" timeZone="#{crashReportBean.person.timeZone}"></h:outputText></f:facet>
																					<h:outputText value="#{trip.endTime}">
																						<f:convertDateTime pattern="MMM dd yyyy hh:mm a z" timeZone="#{crashReportBean.person.timeZone}"/>
																					</h:outputText>
																				</rich:column>
																			</rich:extendedDataTable> 
																		</div>
																</rich:panel>
															</a4j:region>
														</td>	
													</ui:fragment>
													<td>
														
														<div id="map-canvas" style="width: 100%; height: 500px; border: 0"></div>
														
														<a4j:region>
															<a4j:jsFunction data="#{crashReportBean.crashReport}" reRender="crashLocationHiddleInputPanel" name="updateLocation" oncomplete="placeCrashMarker(data.lat,data.lng)" requestDelay="100" limitToList="true">
																<a4j:actionparam name="latitude" assignTo="#{crashReportBean.crashReport.lat}"/>
																<a4j:actionparam name="longitude" assignTo="#{crashReportBean.crashReport.lng}"/>
															</a4j:jsFunction>
														</a4j:region>
													</td>
												</tr>
											</table>
										</rich:panel>
							 		</td>
							 	</tr>
							 </table>
						 </rich:panel>
						 <div class="required-key"><h:outputText value="#{messages.requiredKey}" /></div>
						 
						 <rich:spacer height="10px"/>
						 
						 <ul id="grid_nav" style="margin: 0;">
		                   	<li class="r">
		                      <h:commandButton action="#{reportScheduleBean.save}" styleClass="left"><span class="save"><h:outputText value="#{messages.button_save}" /></span></h:commandButton>
		                      <h:outputText value=" " /><h:commandButton action="#{reportScheduleBean.cancelEdit}" immediate="true" styleClass="left"><span class="cancel"><h:outputText value="#{messages.button_cancel}" /></span></h:commandButton>
		                    </li>
		                 </ul>
					</div>

				</div>

				<div class="panel_sw">
				<div class="panel_statusbar"></div>
				</div>
				</div>
					</a4j:form>
				</td>
			</tr>
		</table>
		
		<script type="text/javascript">
			initMap();
		</script>
	</ui:define>

</ui:composition>
