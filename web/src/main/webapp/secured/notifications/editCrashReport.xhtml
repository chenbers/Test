<ui:composition template="/layout/layout.xhtml"
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:rich="http://richfaces.org/rich"
	xmlns:a4j="http://richfaces.org/a4j"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:security="http://pro.tiwi.com/jsf/security"
    xmlns:tiwiprofn="http://pro.tiwi.com/jsffunctions"
    xmlns:t="http://myfaces.apache.org/tomahawk"
    xmlns:c="http://java.sun.com/jstl/core"
    xmlns:pretty="http://ocpsoft.com/prettyfaces">

	<ui:param name="notificationsSelected" value="current" />
	<ui:param name="helpFile" value="Add_Edit_a_Report.htm" />
   
    <ui:define name="scripts">
		<script src="http://maps.google.com/maps?file=api&amp;v=#{gmBean.version}&amp;key=#{gmBean.key}&amp;hl=#{localeBean.locale.language}" type="text/javascript"></script>
         <script src="#{facesContext.externalContext.request.contextPath}/js/mapGeocode.js" type="text/javascript"></script>
         <script type="text/javascript">
         	function setLatLng(address) {
             	
         		  var geocoder = new GClientGeocoder();
         		  var zoomLookup = new Array(2,4,6,10,12,13,16,16,17);
         		  
         		  geocoder.getLocations(address,
         			    function(response) {
         			      if(response.Status.code!=200){
         			    	 alert("The address: [" + address + "] was not found.");
         			      } else {
         			    	  var place = response.Placemark[0];
         			    	  updateLocation(place.Point.coordinates[1],place.Point.coordinates[0]);							
         			      }
         			    }
         		  );						
         	}
         </script>
	</ui:define>
    
	<ui:define name="content">
		<style>
			.section {
				width: 460px;
				vertical-align: top;
				text-align: left;
			}
			
			.section_fields{
				width: 460px;
				vertical-align: top;
				text-align: left;
				padding: 3px;
				padding-left: 10px;
			}
			
			.section_title {
				font: bold 10px Verdana, Arial, Helvetica, sans-serif;
				border-bottom: 1px solid #333;
				padding: 10px 5px 5px;
				margin-bottom:10px;
				margin-top:10px;
				text-align: left;
			}
		</style>
		
		<t:saveState value="#{crashReportBean}"></t:saveState>
		
		<script type="text/javascript">
				var map,  crashMarker, eventListener, crashPolyline, editTripPolyline, editTripStartPoint, editTripEndPoint, addTripPoints = [], editTripPoints = [], crashPoints = [];
				
				function placeCrashMarker(lat,lng){
					if(map){
						if(crashMarker)
							map.removeOverlay(crashMarker);
						var point = new GLatLng(lat,lng);
			            crashMarker = createCrashMarker(point);
						map.addOverlay(crashMarker);
				    }
	            }
	
	            function createCrashMarker(latLng){
	                var baseIcon = new GIcon();
	    			baseIcon.iconSize = new GSize(21, 20);
	    			baseIcon.iconAnchor = new GPoint(6, 20);
	    			baseIcon.infoWindowAnchor = new GPoint(5, 1);
	            	var icon = new GIcon(baseIcon);
	            	icon.image = "#{facesContext.externalContext.request.contextPath}/images/icon_crash.png";
	            	var options = { icon:icon };
		       	 	marker = new GMarker(latLng, options);
	            	return marker;
	            }

	            function createMarker(latLng,imageURL){
	                var baseIcon = new GIcon();
	    			baseIcon.iconSize = new GSize(21, 20);
	    			baseIcon.iconAnchor = new GPoint(6, 20);
	    			baseIcon.infoWindowAnchor = new GPoint(5, 1);
	            	var icon = new GIcon(baseIcon);
	            	icon.image = imageURL;
	            	var options = { icon:icon };
		       	 	var marker = new GMarker(latLng, options);
	            	return marker;
	            }

	            /*<![CDATA[*/
		            function getClosestPointFromList(latLng,latLngArray){
		            	if(latLng){
			                var closestLatLng = null;
			                var difference = null;
			                for (i = 0;i < latLngArray.length;i=i+1){
								var latDifference = Math.abs(latLng.lat() - latLngArray[i].lat());
								var lngDifference = Math.abs(latLng.lng() - latLngArray[i].lng());
								var tempDifference = latDifference + lngDifference;
								
								if(difference == null || tempDifference <= difference){
										closestLatLng = latLngArray[i];
										difference = tempDifference;
								}
			                }
			                if(closestLatLng)
			                    return closestLatLng;
		            	}
		
		                return latLngArray[latLngArray.length - 1];
		            }
	            /*]]>*/
	            
	            
	            /*<![CDATA[*/
	           	function printObject(obj, element, deep) {
		            jQuery.each(obj, function(name, value) {
			        	jQuery(element).append("<p style='padding-left: " + deep + "px'>" + name + ": " + value + " </p> ");
			        	if(deep < 100 && name != 'data' && null != value && typeof(value) == 'object') {
							printObject(value, element, deep + 10);
			        	}
		            });
				}


	            /*]]>*/
	        // add ability to show trip points, if they exist
	    	<ui:fragment rendered="#{crashReportBean.useExistingTrip eq 'FALSE'  or  not empty crashReportBean.crashReportTrip.route}">		    	
				<a4j:repeat value="#{crashReportBean.crashReport.crashDataPoints}" var="point">
					crashPoints.push(new GLatLng(#{point.lat}, #{point.lng}));
		    	</a4j:repeat>   	

		    	<a4j:repeat value="#{crashReportBean.crashReportTrip.route}" var="route">
					editTripPoints.push(new GLatLng(#{route.lat}, #{route.lng}));
	    		</a4j:repeat>
			</ui:fragment>
		</script>
		

		<!-- initMap script - needs to be refreshed (use initMap panel to refresh script) -->
		<rich:panel id="initMap">
			<script type="text/javascript">
				function initMap()
	            {		          
					if (GBrowserIsCompatible()) {
						 GUnload();
						 map = new GMap2(document.getElementById("map-canvas"));
			
		                 map.addControl(new GMapTypeControl());
						 map.setMapType(G_NORMAL_MAP);

						 <ui:fragment rendered="#{crashReportBean.crashReport.lat eq null}">
						 	 map.setCenter(new GLatLng('#{crashReportBean.groupHierarchy.topGroup.mapLat}','#{crashReportBean.groupHierarchy.topGroup.mapLng}'),12);
						 </ui:fragment>
						 map.addControl(new GLargeMapControl());

						 if(eventListener)
						 	GEvent.removeListener(eventListener);

						 <ui:fragment rendered="#{crashReportBean.useExistingTrip eq false and empty crashReportBean.crashReport.crashDataPoints}">
						 	 eventListener = GEvent.addListener(map,"click", function(overlay, latLng) {     
								  if (latLng) { 
								    updateLocation(latLng.lat(),latLng.lng());
								    
								  }
							 });
						 </ui:fragment>					 

						 <ui:fragment rendered="#{crashReportBean.crashReport.lat ne null and empty crashReportBean.crashReport.crashDataPoints}">
						 	map.setCenter(new GLatLng('#{crashReportBean.crashReport.lat}','#{crashReportBean.crashReport.lng}'),15);
						 	updateLocation('#{crashReportBean.crashReport.lat}','#{crashReportBean.crashReport.lng}');
						 </ui:fragment>

						 // Changed from test on useExistingTrip						 									
						 <ui:fragment rendered="#{crashReportBean.crashReportTrip ne null}">						 
		                	editTripStartPoint = new GLatLng(	#{crashReportBean.crashReportTrip.startLoc.lat},
				                								#{crashReportBean.crashReportTrip.startLoc.lng});
		                	editTripEndPoint = new GLatLng(		#{crashReportBean.crashReportTrip.endLoc.lat},
				                								#{crashReportBean.crashReportTrip.endLoc.lng});
							editTripPolyline = new GPolyline(editTripPoints, "#0000ff", 6, 1);
							map.addOverlay(editTripPolyline);

							// Should there be no crash points
							var bounds = editTripPolyline.getBounds();
		   					map.setCenter(bounds.getCenter(),map.getBoundsZoomLevel(bounds));							

		   					if ( crashPoints.length != 0 ) {
								crashPolyline = new GPolyline(crashPoints, "#CB4B4B", 6, 1);
								map.addOverlay(crashPolyline);

								var bounds = crashPolyline.getBounds();
		   						map.setCenter(bounds.getCenter(),map.getBoundsZoomLevel(bounds));
		   					}

		   					placeCrashMarker('#{crashReportBean.crashReport.lat}','#{crashReportBean.crashReport.lng}');
						 </ui:fragment>						 
					}
	                          
	            } 
			</script>
		</rich:panel>
		
		<!-- displayTrip script - needs to be refreshed (use displayTrip panel to refresh script) -->
		<rich:panel id="displayTrip">
			<script type="text/javascript">
					function displayTrip(){						
						var polyline;
						var marker;
				
						map.clearOverlays();
						
						var points = new Array();
						var index = 0;
						var bounds = null;
						
	   					<ui:repeat value="#{crashReportBean.selectedTrip.route}" var="latLng">
	   						points[index] = new GLatLng(#{latLng.lat}, #{latLng.lng}),
	   						index++;
	   					</ui:repeat>

	   					polyline = new GPolyline(points,"#0000ff", 6);						
	   					if ( index != 0 ) {				   									
	   						map.addOverlay(polyline);	  
	   						bounds = polyline.getBounds();
	   						 											   																				
							map.addOverlay(createMarker(points[0],"#{request.contextPath}/images/ico_start.png"));
							map.addOverlay(createMarker(points[index-1],"#{request.contextPath}/images/ico_end_trip.png"));			
						}
 						 	   					
	   					if ( bounds != null ) {
	   						map.setCenter(bounds.getCenter(),map.getBoundsZoomLevel(bounds));
	   					}
   			
	   					addTripPoints = points;

	   					GEvent.addListener(polyline,"click",function(point){		   					
	   						var tripPoint = getClosestPointFromList(point,addTripPoints);
	   						updateLocation(tripPoint.lat(),tripPoint.lng());
	   						updateCrashTime(tripPoint.lat(),tripPoint.lng());
						});									
					}
			</script>
		</rich:panel>
		
		
		<table width="940" border="0" cellspacing="0"
			cellpadding="0" align="center" style="margin: 0 auto 0 auto;">
			<tr>
				<td valign="top">
				<a4j:form id="edit-form">
				<div class="">
					<div class="panel_nw">
					<div class="panel_title">
						<span class="email"><h:outputText value="#{crashReportBean.editState eq 'ADD' ? messages.crashReport_add : messages.crashReport_edit}" /></span>
						<span class="panel_links"></span></div>
					</div>

					<div class="panel_w"><!-- MAIN CONTENT -->
						<div class="panel_content">
		                
						<rich:messages globalOnly="true"
							errorClass="error" fatalClass="error" warnClass="warning"
							infoClass="info" styleClass="msg" />
																		
						<ul id="grid_nav" style="margin: 0;">
		                   	<li class="r">
		                      <h:commandButton action="#{crashReportBean.save}" styleClass="left">
		                      	<span class="save">
		                      		<h:outputText value="#{messages.button_save}" />
		                      	</span>
		                      </h:commandButton>
		                      <h:outputText value=" " />
		                      <h:commandButton action="#{crashReportBean.cancelEdit}" immediate="true" styleClass="left">
		                      	<span class="cancel">
		                      		<h:outputText value="#{messages.button_cancel}" />
		                      	</span>
		                      </h:commandButton>
		                    </li>
		                </ul>
		                
		                <ui:fragment rendered="#{not empty crashReportBean.crashReport.crashDataPoints}">	
						    <dl id="display-form:j_id122" class="rich-messages msg" style="">
	                           <dt class="warning">
	                              <h:outputText value="#{messages.crashReport_readOnlyMessage}"/>
	                           </dt>
	                        </dl>
                        </ui:fragment>
		                
		                <ui:fragment rendered="${tiwiprofn:messagesAvailable()}">
		                  <dl id="display-form:j_id122" class="rich-messages msg" style="">
		                     <dt class="error">
		                        <h:outputFormat value="#{messages.error_validationMsg}">
		                           <f:param value="${tiwiprofn:getMessageCount()}"/>
		                        </h:outputFormat>
		                        
		                     </dt>
		                  </dl>
		                </ui:fragment>
	
		                <h:panelGrid columns="2" columnClasses="section">
		                	<h:panelGroup>
		                		<div class="section_title"><h:outputText value="#{messages.crashReport_crashSummary}" /></div>
		                		<h:panelGrid columns="2" columnClasses="section_fields">
		                			<h:panelGroup>
		                				<h:outputText value="#{messages.crashReport_status}" />
										<h:outputText styleClass="required" value=" *" />
		                			</h:panelGroup>
		                			<h:panelGroup>
		                				<rich:message for="statusSelectOne" errorClass="field-error" fatalClass="field-error" warnClass="field-warning" infoClass="field-info" styleClass="field-msg" />
		                				<h:selectOneMenu id="statusSelectOne" value="#{crashReportBean.crashReport.crashReportStatus}" converter="SimpleBeanConverter" required="true" requiredMessage="#{messages.required}">
											<f:selectItems value="#{crashReportBean.crashReportStatusAsSelectItems}"/>
										</h:selectOneMenu>
		                			</h:panelGroup>
		                			<h:panelGroup>
		                				<h:outputText value="#{messages.crashReport_date}" />
										<h:outputText styleClass="required" value=" *" />
		                			</h:panelGroup>
		                			<h:panelGroup id="crashDatePanel">
		                				<rich:message for="dateCalendar" errorClass="field-error" fatalClass="field-error" warnClass="field-warning" infoClass="field-info" styleClass="field-msg" />
										<a4j:region>
											<rich:calendar readonly="#{not empty crashReportBean.crashReport.crashDataPoints}" id="dateCalendar" datePattern="MMM dd yyyy hh:mm a" value="#{crashReportBean.crashReport.date}" required="true" requiredMessage="#{messages.required}" timeZone="#{crashReportBean.person.timeZone}">
												<a4j:support event="onchanged" reRender="tripsListPanel" ajaxSingle="true" limitToList="true" action="#{crashReportBean.loadTrips}"/>
											</rich:calendar>
										</a4j:region>
		                			</h:panelGroup>
		                			<h:panelGroup>
		                				<h:outputText value="#{messages.crashReport_vehicle}" />
	                                    <h:outputText styleClass="required" value=" *" />
		                			</h:panelGroup>
		                			<h:panelGroup>
		                				<rich:message for="vehicle" errorClass="field-error" fatalClass="field-error" warnClass="field-warning" infoClass="field-info" styleClass="field-msg" />
										<a4j:region>
											<h:selectOneMenu id="vehicle" style="width:250px" 
												value="#{crashReportBean.crashReport.vehicleID}"  disabled="#{crashReportBean.editState eq 'EDIT'}" 
												required="true" requiredMessage="#{messages.required}">
												<f:selectItems value="#{crashReportBean.vehiclesAsSelectItems}"/>
												<a4j:support event="onchange" reRender="tripsListPanel" ajaxSingle="true" limitToList="true" action="#{crashReportBean.loadTrips}"/>
											</h:selectOneMenu>
										</a4j:region>
		                			</h:panelGroup>
		                			<h:panelGroup>
		                				<h:outputText value="#{messages.crashReport_driver}" />
	                                    <h:outputText styleClass="required" value=" *" />
		                			</h:panelGroup>
		                			<h:panelGroup>
		                				<rich:message for="driver" errorClass="field-error" fatalClass="field-error" warnClass="field-warning" infoClass="field-info" styleClass="field-msg" />
										<a4j:region>
											<h:selectOneMenu id="driver" style="width:250px" 
												value="#{crashReportBean.crashReport.driverID}" disabled="#{crashReportBean.editState eq 'EDIT'}"  
												required="true" requiredMessage="#{messages.required}">
												<f:selectItems value="#{crashReportBean.driversAsSelectItems}"/>
												<a4j:support event="onchange"  ajaxSingle="true" reRender="tripsListPanel" limitToList="true" action="#{crashReportBean.loadTrips}"/>
											</h:selectOneMenu>
										</a4j:region>
		                			</h:panelGroup>
		                			<h:panelGroup>
		                				<h:outputText value="#{messages.crashReport_weather}" />
		                			</h:panelGroup>
		                			<h:panelGroup>
		                				<rich:message for="weather" errorClass="field-error" fatalClass="field-error" warnClass="field-warning" infoClass="field-info" styleClass="field-msg" />
										<h:inputText id="weather" value="#{crashReportBean.crashReport.weather}" styleClass="text" size="30" maxlength="30"></h:inputText>	
		                			</h:panelGroup>
		                			<h:panelGroup>
		                				<h:outputText value="#{messages.crashReport_occupantCount}" />
		                			</h:panelGroup>
		                			<h:panelGroup>
		                				<rich:inputNumberSpinner minValue="0" maxValue="50" value="#{crashReportBean.crashReport.occupantCount}"/>
		                			</h:panelGroup>
		                		</h:panelGrid>
		                	</h:panelGroup>
		                	<h:panelGroup>
		                		<div class="section_title"><h:outputText value="#{messages.crashReport_description}" /></div>
		                		<h:panelGrid columns="1" columnClasses="section">
		                			<div class="instructions"><h:outputText styleClass="instructions" value="#{messages.crashReport_descriptionExplanation}" /></div>
									<h:inputTextarea cols ="50" rows="10" value="#{crashReportBean.crashReport.description}" />
		                		</h:panelGrid>
		                	</h:panelGroup>
		                </h:panelGrid>
					   
						
						 <div class="spacer"></div>
						 <rich:message for="crashLocation" errorClass="field-error" fatalClass="field-error" warnClass="field-warning" infoClass="field-info" styleClass="field-msg" />
						 <div class="add_section_title">
						 	<h:outputText value="#{messages.crashReport_crashLocation}" />
						 	<h:outputText styleClass="required" rendered="#{empty crashReportBean.crashReport.crashDataPoints}" value=" *" />
						 </div>
						 
						<ui:fragment rendered="#{empty crashReportBean.crashReport.crashDataPoints}">
							 <rich:panel id="crashLocationHiddleInputPanel">
							 	<h:inputHidden id="crashLocation" value="#{crashReportBean.crashReport.lat}" required="true" 
							 		requiredMessage="#{messages.required}"/>
							 </rich:panel>
						 </ui:fragment>
						 
						 <rich:panel id="mapPanel">
						 	 <h:panelGrid columns="3" style="padding-left:12px" rendered="#{empty crashReportBean.crashReport.crashDataPoints}">
						 	 	<h:outputText value="#{messages.crashReport_existingTrip}"/>
						 	 	
								<a4j:region>
									<h:selectOneRadio value="#{crashReportBean.useExistingTrip}" layout="lineDirection">
										<f:selectItem itemValue="TRUE" itemLabel="#{messages.crashReport_trips}"/>
										<f:selectItem itemValue="FALSE" itemLabel="#{messages.group_find_address}"/>
										<a4j:support event="onclick" reRender="mapPanel,initMap" oncomplete="initMap();" limitToList="true"/>
									</h:selectOneRadio>									
								</a4j:region>
								
								<ui:fragment rendered="#{crashReportBean.useExistingTrip ne 'true'}">
									<input type="text" size="42" id="addressTextBox" value=""/>
									<rich:spacer width="10px"/>
									<a4j:commandButton immediate="true" 
										onclick="showAddressWithAccuracy(document.getElementById('addressTextBox').value);setLatLng(document.getElementById('addressTextBox').value);" 
										styleClass="left">
										<span class="search">
											#{messages.group_locate}
										</span>
									</a4j:commandButton>									
								</ui:fragment>
						 	 </h:panelGrid>
						 	 
						 	 <h:panelGrid columns="#{crashReportBean.useExistingTrip eq 'true' ? '2' : '1'}" 
						 	 	columnClasses="#{crashReportBean.useExistingTrip eq 'true' ? 'section' : ' '}" width="100%">
						 	 	
						 	    <ui:fragment rendered="#{crashReportBean.useExistingTrip eq 'true'}">
							 	 	<h:panelGroup>
										<h:panelGrid id="driverVehicleSearchPanel" style="padding-left:10px" columns="2">
											<h:outputText value="#{messages.crashReport_searchType}"/>
											<a4j:region>
												<h:selectOneRadio value="#{crashReportBean.selectedEntityType}" layout="lineDirection">
													<f:selectItem itemValue="ENTITY_DRIVER" itemLabel="#{messages.crashReport_driver}"/>
													<f:selectItem itemValue="ENTITY_VEHICLE" itemLabel="#{messages.crashReport_vehicle}"/>
													<a4j:support ajaxSingle="true" event="onclick" reRender="tripsListPanel" limitToList="true" 
														action="#{crashReportBean.loadTrips}"/>
												</h:selectOneRadio>
											</a4j:region>
										</h:panelGrid>
										
										<rich:spacer height="10px"/>
										
										<a4j:region>
											<rich:panel id="tripsListPanel">
													<div class="datagrid_panel" style="padding-right: 5px">
														<rich:spacer height="5px"/>
														<rich:extendedDataTable value="#{crashReportBean.tripList}"
														        rowClasses="tableOdd,tableEven"
														        styleClass="datagrid"
														        selectionMode="single"
														        enableContextMenu="false"
														        selectedClass="selected-row"
																var="trip" height="440px">
															<a4j:support event="onRowClick" reRender="displayTrip" oncomplete="displayTrip();">
							                                    <f:setPropertyActionListener value="#{trip}" target="#{crashReportBean.selectedTrip}" />
							                                </a4j:support>
															<rich:column sortBy="#{trip.startTime}" sortOrder="ASCENDING" sortable="false" width="160px">
																<f:facet name="header">
																	<h:outputText value="#{messages.crashReport_startTime}"/>
																</f:facet>
																<h:outputText value="#{trip.startTime}">
																	<f:convertDateTime pattern="MMM dd yyyy hh:mm a z" timeZone="#{crashReportBean.person.timeZone}"/>
																</h:outputText>
															</rich:column>
															<rich:column width="160px">
																<f:facet name="header">
																	<h:outputText value="#{messages.crashReport_endTime}" timeZone="#{crashReportBean.person.timeZone}"/>
																</f:facet>
																<h:outputText value="#{trip.endTime}">
																	<f:convertDateTime pattern="MMM dd yyyy hh:mm a z" timeZone="#{crashReportBean.person.timeZone}"/>
																</h:outputText>
															</rich:column>
														</rich:extendedDataTable> 
													</div>
											</rich:panel>
										</a4j:region>
										
							 	 	</h:panelGroup>
						 	 	</ui:fragment>
						 	 	
						 	 	<h:panelGroup>
						 	 		<div class="instructions">
						 	 			<h:outputText styleClass="instructions" value="#{messages.crashReport_tripSelection}" 
						 	 				rendered="#{empty crashReportBean.crashReport.crashDataPoints}" />
						 	 		</div>
						 	 		
				 	 				<rich:spacer height="5px"/>
						 	 								 	 		
						 	 		<div id="map-canvas" style="width: 100%; height: 500px; border: 0px;"/>
						 	 	
									<a4j:region>
										<a4j:jsFunction data="#{crashReportBean.crashReport.latLng}" 
											reRender="crashLocationHiddleInputPanel" name="updateLocation" 
											oncomplete="placeCrashMarker(data.lat,data.lng);" limitToList="true">
											<a4j:actionparam name="latitude" assignTo="#{crashReportBean.crashReport.lat}"/>
											<a4j:actionparam name="longitude" assignTo="#{crashReportBean.crashReport.lng}"/>
										</a4j:jsFunction>
									</a4j:region>
									<a4j:region>
										<a4j:jsFunction reRender="crashDatePanel" name="updateCrashTime" 
											action="#{crashReportBean.updateCrashTime}" limitToList="true">
											<a4j:actionparam name="latitude" assignTo="#{crashReportBean.crashReport.lat}"/>
											<a4j:actionparam name="longitude" assignTo="#{crashReportBean.crashReport.lng}"/>
										</a4j:jsFunction>
									</a4j:region>		
						 	 	</h:panelGroup>
						 	 	
						 	 </h:panelGrid>
						 </rich:panel>
						 <div class="required-key"><h:outputText value="#{messages.requiredKey}" /></div>
						 
						 <rich:spacer height="10px"/>
						 
						 <ul id="grid_nav" style="margin: 0;">
		                   	<li class="r">
		                      <h:commandButton action="#{crashReportBean.save}" styleClass="left">
		                      	<span class="save">
		                      		<h:outputText value="#{messages.button_save}" />
		                      	</span>
		                      </h:commandButton>
		                      <h:outputText value=" " />
		                      <h:commandButton action="#{crashReportBean.cancelEdit}" immediate="true" styleClass="left">
		                      	<span class="cancel">
		                      		<h:outputText value="#{messages.button_cancel}" />
		                      	</span>
		                      </h:commandButton>
		                    </li>
		                 </ul>
					</div>

				</div>

				<div class="panel_sw">
					<div class="panel_statusbar"/>
				</div>
			</div>
		</a4j:form>
	</td>
	</tr>
	</table>
	
	<div id="iteminfo">
	</div>
	
	<script type="text/javascript">
			initMap();
			<ui:fragment rendered="#{crashReportBean.useExistingTrip eq 'TRUE'}">
				displayTrip();
			</ui:fragment>
	</script>
	
	</ui:define>

</ui:composition>
