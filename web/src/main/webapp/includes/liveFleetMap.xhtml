<ui:composition 
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:a4j="http://richfaces.org/a4j"
	xmlns:rich="http://richfaces.org/rich"
	xmlns:f="http://java.sun.com/jsf/core"
  	xmlns:iwi="http://pro.tiwi.com/jsf"
	xmlns:h="http://java.sun.com/jsf/html">
	
	<script src="http://gmaps-utility-library.googlecode.com/svn/trunk/markermanager/release/src/markermanager.js">	
	</script>
		<div class="spacer"></div>		
	
		<div class="">
				<div class="panel_nw">
					<div class="panel_title">
						<span class="map">Fleet Map</span>
						<span class="panel_links">
						<a4j:form id="refresh">
						<a4j:commandButton image="/images/ico_refresh.png" immediate="true"
							reRender="map"
							value="#{messages.refresh}">
						</a4j:commandButton>
						</a4j:form>
						</span>
					</div>
				</div>
				<div class="panel_w">
					
								<ui:repeat value="#{driverLocationBean.driverLastLocationBeans}" var="driverLastLocationBean">
									<div id="#{driverLastLocationBean.driver.driverID}" style="display:none">
										<h:form id="mapLinks">
											<h:commandLink value="#{driverLastLocationBean.driverName}" action="#{driverLocationBean.driverAction}">
												<f:param name="id" value="#{driverLastLocationBean.driver.driverID}"/>
											</h:commandLink>
										</h:form>
									</div>
							  	</ui:repeat>
							  	
					<div class="panel_content">
			  			<rich:panel bodyClass="panel_content" id="map">
						<h:panelGroup styleClass="map-border" layout="block">
							<div id="map-canvas" style="#{mapwidth};#{mapheight};border:0"></div>
					  	</h:panelGroup>
					    <script type="text/javascript">
					    	var markerClicked=false;
      						if (GBrowserIsCompatible()) {
        						map = new GMap2(document.getElementById("map-canvas"));
        						map.addControl(new GLargeMapControl());
        						map.addControl(new GMapTypeControl());
        						map.addControl(new GOverviewMapControl()); 
								map.setCenter(new GLatLng(#{driverLocationBean.center.lat}, #{driverLocationBean.center.lng}), 10);
								map.setMapType(G_NORMAL_MAP);
 								var mgr = new MarkerManager(map);
 								
						        // Create a base icon for all of our markers that specifies the
						        // shadow, icon dimensions, etc.
//						        var baseIcon = new GIcon(G_DEFAULT_ICON);
//						        baseIcon.shadow = "http://www.google.com/mapfiles/shadow50.png";
//						        baseIcon.iconSize = new GSize(20, 34);
//						        baseIcon.shadowSize = new GSize(37, 34);
//						        baseIcon.iconAnchor = new GPoint(9, 34);
//						        baseIcon.infoWindowAnchor = new GPoint(9, 2);
						        
 								// Creates a marker whose info window displays the letter corresponding
						        // to the given index.
						        function createMarker(point, index, driverId, iconImage) {
						          // Create a colored icon for this point using our icon class
						        coloredIcon = new GIcon(G_DEFAULT_ICON); 
						        coloredIcon.image = iconImage; 
						        coloredIcon.iconSize = new GSize(25, 30); 
						        coloredIcon.iconAnchor = new GPoint(9, 34); 
						        coloredIcon.infoWindowAnchor = new GPoint(9, 2); 
						        coloredIcon.infoShadowAnchor = new GPoint(18, 25);
						        
//						          var letteredIcon = new GIcon(baseIcon);
//						          letteredIcon.image = "http://www.google.com/mapfiles/marker" + icon + ".png";
						
						          // Set up our GMarkerOptions object
						          markerOptions = { icon:coloredIcon };
						          var marker = new GMarker(point, markerOptions);
						          
						          GEvent.addListener(marker, "mouseover", function() {
						          			var node = document.getElementById(driverId).cloneNode(true);
						          			node.style.display = 'block';
								            if (!markerClicked) marker.openInfoWindow(node);
						            
						          });
						          GEvent.addListener(marker, "click", function() {
						          			var node = document.getElementById(driverId).cloneNode(true);
						          			node.style.display = 'block';
								            if (markerClicked) marker.openInfoWindow(node);
								            markerClicked =true;
						            
						          });
						          GEvent.addListener(marker, "mouseout", function() {
								            if (!markerClicked) marker.closeInfoWindow();
								            
						            
						          });
						          GEvent.addListener(marker, "infowindowclose", function() {
								            markerClicked = false;
						            
						          });
						          return marker;
						        }
 								var i=0;
								<ui:repeat value="#{driverLocationBean.driverLastLocationBeans}" var="driverLastLocationBean">
									var latlng = new GLatLng(#{driverLastLocationBean.lastLocation.lat}, #{driverLastLocationBean.lastLocation.lng});
						        		mgr.addMarker(createMarker(latlng, i++,  "#{driverLastLocationBean.driver.driverID}",
						        		 "#{driverLocationBean.mapIconMap.icons[driverLastLocationBean.groupID]}"),10);
	        						
							  	</ui:repeat>
							}	
    					</script> 
    					</rich:panel>
 					 </div>
				</div>		
																					
				<div class="panel_sw">
					<div class="panel_statusbar"></div>
				</div>
				
				<rich:panel rendered="#{driverLocationBean.showLegend}">					
				<div class="spacer"></div>		
				
					<div class="panel_nw">
						<div class="panel_title">
							<span class="legend">Fleet Legend</span>
							<span class="panel_links"></span>
						</div>
					</div>	
	 				<div class="panel_w">
						<div class="panel_content">
						  
						  <rich:dataList value="#{driverLocationBean.childGroups}" var="group" styleClass="legend clearfix">
						  	<h:graphicImage value="#{driverLocationBean.legendIconMap.icons[group.groupID]}"></h:graphicImage>
						  	<h:outputText value="#{group.name}"></h:outputText>
						  </rich:dataList>
						  
	  					</div>
					</div>
	
					<div class="panel_sw">
						<div class="panel_statusbar"></div>
					</div>
				</rich:panel>				
		</div>	
			
</ui:composition>	