<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:c="http://java.sun.com/jstl/core"
    xmlns:a4j="http://richfaces.org/a4j"
    xmlns:rich="http://richfaces.org/rich">

<!--
  Parameters:
  ==============
         value: The value to set; in minutes between 0 and 1439.

  Optional Parameters:
  ==============
      formName: The name of the form containing the picker. If not provided, "edit-form" is used.
     increment: The increment to use, in minutes.  If not provided 15 minutes is used.
            id: If more than one timePicker is used on a page, must be a unique value for the time picker's ID.
      onchange: A javascript expression to call when the value changes.

  To use:
  ==============
  <ui:include src="/includes/timePicker.xhtml" />
-->

  <ui:composition>

    <c:if test="#{empty increment}">
      <c:set var="increment" value="#{15}" />
    </c:if>
    <c:if test="#{empty formName}">
      <c:set var="formName" value="edit-form" />
    </c:if>
    <c:if test="#{empty id}">
      <c:set var="id" value="timePicker" />
    </c:if>

    <h:inputHidden id="#{id}" value="#{value}" />

    <select id="#{id}Time" size="1" onchange="updateTime(this.value, '#{id}')">
      <c:forEach begin="0" end="#{(720 / increment) - 1}" var="step">
        <c:set var="minutes" value="#{step * increment}" />
        <c:set var="hours" value="#{((minutes - (minutes % 60)) / 60)}" />
        <c:if test="#{hours == 0}">
          <c:set var="hours" value="12" />
        </c:if>
        <option value="#{minutes}"><h:outputText value="#{hours}"><f:convertNumber integerOnly="true" /></h:outputText>:<h:outputText value="#{minutes % 60}"><f:convertNumber integerOnly="true" minIntegerDigits="2" maxIntegerDigits="2" /></h:outputText></option>
      </c:forEach>
    </select>

    <select id="#{id}Afternoon" size="1" onchange="updateAfternoon(this.value, '#{id}')">
      <c:if test="#{(empty value) or (value lt 720)}">
        <option value="false" selected="selected"><h:outputText value="#{messages.timePicker_am}" /></option>
        <option value="true"><h:outputText value="#{messages.timePicker_pm}" /></option>
      </c:if>
      <c:if test="#{value ge 720}">
        <option value="false"><h:outputText value="#{messages.timePicker_am}" /></option>
        <option value="true" selected="selected"><h:outputText value="#{messages.timePicker_pm}" /></option>
      </c:if>
    </select>

    <script type="text/javascript">
      if (typeof(updateTime) == "undefined")
      {
        updateTime = function(minutes, id)
        {
          minutes = Number(minutes);
          var time = document.getElementById("#{formName}:" + id);
          if (Number(time.value) &gt;= 720)
            minutes += 720;
          time.value = minutes;
          #{onchange}
        }

        updateAfternoon = function(pm, id)
        {
          pm = pm == "true";
          var time = document.getElementById("#{formName}:" + id);
          var minutes = Number(time.value);
          if (pm &amp;&amp; (minutes &lt; 720))
            time.value = minutes + 720;
          else if (!pm &amp;&amp; (minutes &gt;= 720))
            time.value = minutes - 720;
          #{onchange}
        }

        restoreTime = function(id)
        {
          var minutes = Number(document.getElementById("#{formName}:" + id).value);
          document.getElementById(id + "Afternoon").selectedIndex = Math.floor(minutes / 720);
          minutes %= 720;
          var time = document.getElementById(id + "Time");
          for (var i = 0; i &lt; time.length; i++)
            if (time.options[i].value == minutes)
            {
              time.selectedIndex = i;
              break;
            }
        }
      }

      restoreTime("#{id}");
    </script>

  </ui:composition>

</html>