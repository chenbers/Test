<ui:composition 
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:rich="http://richfaces.org/rich"
	xmlns:a4j="http://richfaces.org/a4j"
	xmlns:iwi="http://pro.tiwi.com/jsf"
	xmlns:c="http://java.sun.com/jstl/core"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:t="http://myfaces.apache.org/tomahawk">
	
	<t:saveState  value="#{teamTripsBean}"/>
	<a4j:loadScript src="#{googleMapURLBean.mapUrl}&amp;hl=#{localeBean.locale.language}" />
	<script src="#{facesContext.externalContext.request.contextPath}/js/arrowedPolyline.js" type="text/javascript"></script>	
	
	<script type="text/javascript">
	function orderOfCreation(marker,b) 
	{
	      return 1;
	}	
	
    function createMarker(point, iconImage) 
    {
    	var markerIcon;
    	var marker;
    	var baseIcon = new GIcon();
    	baseIcon.iconSize = new GSize(21, 20);
    	baseIcon.iconAnchor = new GPoint(6, 20);
    	baseIcon.infoWindowAnchor = new GPoint(5, 1);

		//Use passed in image.
    	if(iconImage != null)
    	{
			markerIcon = new GIcon(baseIcon);
       	    markerIcon.image = iconImage;
       	 	markerOptions = { icon:markerIcon,zIndexProcess:orderOfCreation  };
       	 	marker = new GMarker(point, markerOptions);
    	}
    	//Use default GoogleMap marker image.
    	else
    	{
	      	markerIcon = new GIcon();
			marker = new GMarker(point);
    	}

        bounds.extend(marker.getPoint());

    	return marker;
    }
	
	</script>
	
	<rich:panel id="drawTeamTrips">
 <script type="text/javascript">
  
 function drawTrips(index){
		bounds = new GLatLngBounds();
		var colors= ["#820f00","#ff4a12","#943bc5","#74c6f1","#586b7a","#3e4f4f","#abc507","#eab239","#588e03",
					 "#8a8c81","#8173b1","#f99b49","#c6064f","#c4bdd9","#c8a77b"];
		
			var marker;
			var startlatlng;
			var endlatlng;

			if ( map == null ) {
				return;
			}
			map.clearOverlays();
			
			if (#{(teamTripsBean.selectedDriversTrips eq null) || (teamTripsBean.selectedDriversTrips[0] eq null )}){
				return;
			}
			<ui:repeat value="#{teamTripsBean.selectedDriversTrips}" var="driversTripsBounds" >
				<ui:repeat value="#{driversTripsBounds}" var="tripbounds">
					<ui:repeat value="#{tripbounds.route}" var="rt2">
						bounds.extend(new GLatLng(#{rt2.lat}, #{rt2.lng}));
					</ui:repeat>
				</ui:repeat>
			</ui:repeat>
			map.setZoom(map.getBoundsZoomLevel(bounds));
			<ui:repeat value="#{teamTripsBean.selectedDriversTrips}" var="driversTrips" >
				<ui:repeat value="#{driversTrips}" var="trip">
// BDCCArrowedPolyline(points, color, weight, opacity, opts, gapPx, headLength, headColor, headWeight, headOpacity)
					var arrowPolyline = new BDCCArrowedPolyline([
						<ui:repeat value="#{trip.route}" var="rt">
								new GLatLng(#{rt.lat}, #{rt.lng}),
						</ui:repeat>
		  						new GLatLng(#{trip.routeLastStep.lat}, #{trip.routeLastStep.lng})
										],colors[index], 4, 0.9,{geodesic:true}, 100, 16,colors[index],1,0.9);
					map.addOverlay(arrowPolyline);
				
					//Start of trip marker
					startlatlng = new GLatLng(#{trip.beginningPoint.lat}, #{trip.beginningPoint.lng});
					marker = createMarker(startlatlng,"#{facesContext.externalContext.request.contextPath}/images/ico_start.png");
					map.addOverlay(marker);
					bounds.extend(marker.getPoint());
					//End of trip marker
					endlatlng = new GLatLng(#{trip.routeLastStep.lat}, #{trip.routeLastStep.lng});
					if ("#{trip.inProgress}" == "true")
					{
						marker = createMarker(endlatlng, "#{facesContext.externalContext.request.contextPath}/images/ico_inprogress_trip.png");
					}
					else
					{
						marker = createMarker(endlatlng,"#{facesContext.externalContext.request.contextPath}/images/ico_end_trip.png");
					}
					map.addOverlay(marker);
					bounds.extend(marker.getPoint());
				</ui:repeat>
			</ui:repeat>

//				map.setZoom(map.getBoundsZoomLevel(bounds));
				map.setCenter(bounds.getCenter());

	  				var violation;
					<ui:repeat value="#{teamTripsBean.violationEvents}" var="violation">
						violation = new GLatLng(#{violation.latitude}, #{violation.longitude});
						map.addOverlay(createMarker(violation,"#{facesContext.externalContext.request.contextPath}/images/ico_violation.png"));
					</ui:repeat>

				var idleMarker;
					var idle;
					<ui:repeat value="#{teamTripsBean.idleEvents}" var="idle">
						idle = new GLatLng(#{idle.latitude}, #{idle.longitude});
						map.addOverlay(createMarker(idle, "#{facesContext.externalContext.request.contextPath}/images/ico_idle.png"));
					</ui:repeat>


					var tamper;
					<ui:repeat value="#{teamTripsBean.tamperEvents}" var="tamperEvent">
						tamper = new GLatLng(#{tamperEvent.latitude}, #{tamperEvent.longitude});
						map.addOverlay(createMarker(tamper, "#{facesContext.externalContext.request.contextPath}/images/ico_tampering.png"));
					</ui:repeat>
				
		}
 </script>
</rich:panel>
	
    <rich:tab label="Trips" onClick="alert('trips')">
   	<!-- Trips Map -->
   	<div class="section">
	    <div class="panel_nw">    
	       <div class="panel_title">
	       <h:graphicImage value="/images/ico_map.png" />Trips
	       </div>
	    </div>
	    <div class="panel_w">
	       <div class="panel_content">
	       
	         <div id="driverTable" 	style="float:left; width:25%;height: 500px; border: 0;">
	        	<a4j:form id="tripsTableForm">
	        	<a4j:region id="teamTripsRegion">
	         	<rich:dataTable	value="#{teamTripsBean.drivers}" 
					       		id="driversTrips" 
					       		var="driver"
					       		rowKeyVar="index"
								styleClass="datagrid" 
								rowClasses="tableOdd,tableEven"
								rows="15"
								columnsWidth="85%,15%"
								width="100%">
					<a4j:support event="onRowClick" reRender="drawTeamTrips"  
										 oncomplete="drawTrips(#{index%15})" limitToList="true">
                         <f:setPropertyActionListener value="#{driver}" target="#{teamTripsBean.selectedDriver}" />
                    </a4j:support>
												
				<rich:column>
					<f:facet name="header">
						#{messages.teamPage_driverHeader}
					</f:facet>
					#{driver.person.fullName}
				</rich:column>
				<rich:column>
				<f:facet name="header">
				  <a4j:status layout="block">
                	<f:facet name="start">
                    	<h:graphicImage  value="/images/progress2.gif"/>
                	</f:facet>
            	</a4j:status>
				
				</f:facet>
				   <img src="#{teamTripsBean.icons[index].url}" alt="#{index}"/>
				</rich:column>
				</rich:dataTable>
				<rich:datascroller align="left" for="driversTrips" action="#{teamTripsBean.clearTrips}" oncomplete="map.clearOverlays();colorRows();" 
            		 styleClass="dataScrollerSmall" renderIfSinglePage="false" id="driverTableScroller" width="98%"
            		  limitToList="true"/>
            		 
				 </a4j:region>
 				</a4j:form>	
 				         
	         </div>  
	            
			 <div id="map-canvas" style="float:right; width: 74%; height: 500px; border: 0"></div>
			 <div style="clear:both"></div>
	       </div>
	    </div>
	    <div class="panel_sw">
	       <div class="panel_statusbar"/>
	   	</div>
   	</div>
    <!-- End Trips Map -->
    </rich:tab>
    <script>
    function colorRows(){
    		jQuery('#tripsTableForm\\:driversTrips tr').click(function(){

    			if(jQuery(this).hasClass('selected-row')){
							
							jQuery(this).removeClass('selected-row');
							jQuery(this).children().removeClass('selected-row');
						}
						else {
								
							jQuery(this).addClass('selected-row');
							jQuery(this).children().addClass('selected-row');
						}
		});
    }
    </script>
</ui:composition>