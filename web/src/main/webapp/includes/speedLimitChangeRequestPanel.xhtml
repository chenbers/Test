<html         xmlns="http://www.w3.org/1999/xhtml"
              xmlns:ui="http://java.sun.com/jsf/facelets"
              xmlns:h="http://java.sun.com/jsf/html"
              xmlns:rich="http://richfaces.org/rich"
              xmlns:a4j="http://richfaces.org/a4j"
              xmlns:f="http://java.sun.com/jsf/core"
              xmlns:c="http://java.sun.com/jstl/core"
              xmlns:security="http://pro.tiwi.com/jsf/security">
              
<ui:composition>

<rich:panel id="script">
	<script type="text/javascript">
      var gLatLngArray;
      var polyline;
      var seg;
	  var bcolor;
	  var count = 0;
	  var row;
	
		function initMap(){
			if (GBrowserIsCompatible()) {
			
	        		var opts = { onMarkersSetCallback: processMarkers, resultList : G_GOOGLEBAR_RESULT_LIST_SUPPRESS, showOnLoad: true};
					mapsbs = new GMap2(document.getElementById("map-sbs"), {googleBarOptions: opts});
					mapsbs.setCenter(new GLatLng(#{speedLimitChangeRequests.maplat},#{speedLimitChangeRequests.maplng}), #{speedLimitChangeRequests.mapzoom});
					mapsbs.addControl(new GLargeMapControl());
					mapsbs.addControl(new GMapTypeControl());
					mapsbs.addControl(new GOverviewMapControl()); 
					mapsbs.setMapType(G_NORMAL_MAP);					
			       	mapsbs.enableScrollWheelZoom();
	        		mapsbs.enableGoogleBar();
	        		geocoder =new GClientGeocoder();
	        				       
			     	GEvent.addListener(mapsbs, "click", function(overlay, point) {
			
			        if (overlay) {
			          
			          	var segment = whichSegment(overlay);
			          	if (segment != null){
			          	
			 				selectSegment(segment.id);
			 			}	
			          } else {
			          
			            reverseGeocode(point.y,point.x,"");
			            
				      }
			        });
  						
			       	GEvent.addListener(mapsbs, "singlerightclick", function(point, source, overlay) {
			          if (overlay) {
			          	var segment = whichSegment(overlay);
			          	if (segment != null){
			          	
			          		var point = segment.polyline.getVertex(0);
			          	
							openPanoramaBubblePolyline(point);
			 			}	
			          }
			        });
				}
			}
	function addMarker(){
	
		var baseIcon = new GIcon();
		baseIcon.iconSize = new GSize(25, 30);
		baseIcon.iconAnchor = new GPoint(6, 20);
		baseIcon.infoWindowAnchor = new GPoint(5, 1);
		baseIcon.shadow=null;
	
		var markerIcon = new GIcon(baseIcon);
     	markerIcon.image = "#{request.contextPath}/images/ico_violation.png";
     	markerOptions = { icon:markerIcon};
     	marker = new GMarker(new GLatLng(#{speedLimitChangeRequests.lat},#{speedLimitChangeRequests.lng}), markerOptions);
		
		mapsbs.addOverlay(marker);
		
	}
	function showSegments(){
			    bcolor = '#EBFFCA';
				streetSegments = new Array();
				 mapsbs.clearOverlays();
		         mapsbs.setCenter(new GLatLng(#{speedLimitChangeRequests.maplat},#{speedLimitChangeRequests.maplng}),16);
		        
		         <ui:repeat value="#{speedLimitChangeRequests.changeRequests}" var="changeRequest">
		         
		         	if(bcolor == '#EBFFCA'){
		         	
		         		bcolor = '#ffffff';
		         	}
		         	else {
		         	
		         		bcolor = '#EBFFCA';
		         	}
		         	
			         // Do polyline for segment    
			         gLatLngArray = new Array();
			         <ui:repeat value="#{changeRequest.streetSegmentPoints}" var="point">
				           var lat = #{point.x};
				           var lng = #{point.y};
				           gLatLngArray.push(new GLatLng(lat,lng));
				  	 </ui:repeat>
			         
			         polyline = new GPolyline(gLatLngArray, "#666666", 10);
			         
			     	GEvent.addListener(polyline, "mouseover", function() {
			     	
			          	var segment = whichSegment(this);
			          	if (segment != null){
			          	
			          		mapsbs.getDragObject().setDraggableCursor("pointer");
			 				hoverSegment(segment.id);
			 			}
			
			 		});	
			     	GEvent.addListener(polyline, "mouseout", function() {
			     	
			 				hoverDeselectAllSegments();
			 				mapsbs.getDragObject().setDraggableCursor("default"); 
			 		});	

			         seg = new StreetSegment();
			         
			         row = document.getElementById('speedLimitChangeRequestTable:items:'+count+':c').parentNode.parentNode;
			         seg.initialize(#{changeRequest.linkId},polyline, bcolor, row);
			         streetSegments.push(seg);
			        
			         mapsbs.addOverlay(seg.polyline);
			         
			         count++;
			         
		         </ui:repeat>
		 }
	function bodyUnload(){
		GUnload();
	}	
	</script>
		
</rich:panel>
    <table width="920" cellspacing="0" cellpadding="0" align="center" style="margin: 0 auto 0 auto;">
      <tr>
       <td valign="top">
          <!-- START PANEL -->
          <div class="">

 			<div class="panel_w">

				<div class="panel_content">
 		<rich:panel id="map-data">
     <a4j:form id="speedLimitChangeRequestTable">
          <ul id="grid_nav" style="margin: 0;">
            <li class="l"><a4j:commandButton id="slcrpDelete" action="#{speedLimitChangeRequests.delete}" reRender="map-data, script" styleClass="left" onclick=""><span class="delete"><h:outputText value="#{messages.button_delete}" /></span></a4j:commandButton></li>
            <li class="l"><a4j:commandButton id="slcrpDeleteAll" styleClass="left" action="#{speedLimitChangeRequests.deleteAll}" reRender="map-data" onclick=""><span class="delete"><h:outputText value="#{messages.sbs_clearAll}" /></span></a4j:commandButton></li>
            <li class="l">
              <table border="0" cellspacing="0" cellpadding="4" id="grid_nav_search_box">
                <tr>
         		<td><h:outputText value="#{messages.button_search}" /></td>
         		<td><h:inputText size="40" name="address" id="address" class="text" onkeypress="if (event &amp;&amp; event.keyCode == 13) { document.getElementById('speedLimitChangeRequestTable:searchButton').onclick(); return false; } return true;"/></td>
                 </tr>
              </table>
            </li>
  			<li class="l"><a4j:commandButton id="slcrpFindAddress" styleClass="left" 
  						onclick="showLocation(document.getElementById('speedLimitChangeRequestTable:address').value);">
  						<span class="search"><h:outputText value="#{messages.sbs_findAddress}" /></span></a4j:commandButton></li>
            <li class="l"><a4j:commandButton id="slcrpSubmitRequest" styleClass="left" onclick="Richfaces.showModalPanel('saveSlcrPanel')"><span class="edit"><h:outputText value="#{messages.sbs_submitRequest}" /></span></a4j:commandButton></li>
            
                    <li class="r grid_icon">
                        <a4j:status id="team_ajax_status">
                            <f:facet name="start">
                                 <h:graphicImage value="/images/progress2.gif"/>
                            </f:facet>
                        </a4j:status>
                    </li>
            </ul>
 				<div class="spacer"></div>			
			 	<table>
				  <tr style=" width : 100%">
			    	<td  valign="top" width="50%">
		<style>
            .alt_datagrid th {
            	background: #BFD292;
            	padding: 1px 5px;
            	text-align: center;
            }
            
            .alt_datagrid>tbody>tr>td {
            	text-align: center;
                padding: 5px;
            }
            .alt_datagrid caption {
              font: 10px Verdana,Tahoma,Arial,sans-serif;
              text-align: center;
            }
        </style>
		<div class="datagrid">
		<!-- Start Speed Limit Changer Request table --> 
	    	<rich:dataTable value="#{speedLimitChangeRequests.changeRequests}" id="items" var="item" styleClass="datagrid alt_datagrid" rowkey="row" rowkeyVar="rowVar"
                rowClasses="trendTableOdd,trendTableEven" cellspacing="1" rows="100" width="365px" onRowClick="selectSegment(#{item.linkId})"
                onRowMouseOver="hoverSegment(#{item.linkId},this)" onRowMouseOut="hoverDeselectAllSegments(this)">
                <f:facet name="caption" style="text-align:center">
                    <h:outputText value="#{speedLimitChangeRequests.caption}" id="caption" style="text-align:center" />
                </f:facet>

                <c:if test="#{speedLimitChangeRequests.renderTable}">                                   
	                <f:facet name="header">
	                    <rich:columnGroup>
	                        <rich:column rowspan="2">#{""}</rich:column>
	                        <rich:column rowspan="2">#{messages.sbs_address}</rich:column>
	                        <rich:column colspan="2">#{messages.sbs_speed_limit}</rich:column>
	                        <rich:column rowspan="2">#{messages.sbs_comment}</rich:column>
	                        <rich:column breakBefore="true">#{messages.sbs_current}</rich:column>
	                        <rich:column>#{messages.sbs_new}</rich:column>
	                    </rich:columnGroup>	
	                </f:facet>
                    <!-- Data -->
                    <rich:column style="padding: 0;">
                        <h:selectBooleanCheckbox value="#{item.selected}" id="c" onclick="check = true" />
                    </rich:column>
                    <rich:column>
                        <h:outputText value="#{item.address}" />
                    </rich:column>
                    <rich:column>
                        <h:outputText value="#{item.speedLimit}  #{item.kilometersPerHour ? messages.sbs_kph : messages.sbs_mph}" />
                        <!--<h:outputText value="#{item.speedLimit}" converter="MphToKphConverter"/>-->
                    </rich:column>
                    <rich:column>
                        <h:inputText value="#{item.newSpeedLimit}" required="true" size="3" onclick="check = true" onkeyup="validate(this,0,199)" id="s" />
                    </rich:column>
                    <rich:column>
                        <h:inputText value="#{item.comment}" size="10" id="t" onclick="check = true" />
                    </rich:column>
                </c:if>
            </rich:dataTable>



</div>

			
			
			          <!-- END PANEL -->
					 </td>
					    <td width="5" valign="top">
					    
							<!-- START PANEL -->
									
								<!-- START FLEET MAP PANEL -->
	<div class="">
		<div id="map-sbs" style="height:400px;width:400px;border:0"></div>
		<script  type="text/javascript">
			initMap();
			showSegments();
			addMarker();
    	</script> 
 	</div>	

							<!-- END PANEL -->
							</td>
					</tr>
			    </table>
</a4j:form>
</rich:panel>
				</div>
			</div>
          </div>
           <div class="panel_sw">
              <div class="panel_statusbar"></div>
            </div>
          </td>
		</tr>
    </table>


	<a4j:form id="segment">
		<a4j:jsFunction name="addSegment" action="#{speedLimitChangeRequests.addChangeRequest}" reRender="map-data,script" >
			<a4j:actionparam name="lat" assignTo="#{speedLimitChangeRequests.lat}"/>
			<a4j:actionparam name="lng" assignTo="#{speedLimitChangeRequests.lng}"/>
			<a4j:actionparam name="address" assignTo="#{speedLimitChangeRequests.address}"/>
			<a4j:actionparam name="zoom" assignTo="#{speedLimitChangeRequests.mapzoom}"/>
		</a4j:jsFunction>
	</a4j:form>	

	<a4j:form id="segment1">
		<a4j:jsFunction name="addSegmentWithoutRerendering" action="#{speedLimitChangeRequests.addChangeRequest}">
			<a4j:actionparam name="lat" assignTo="#{speedLimitChangeRequests.lat}"/>
			<a4j:actionparam name="lng" assignTo="#{speedLimitChangeRequests.lng}"/>
			<a4j:actionparam name="address" assignTo="#{speedLimitChangeRequests.address}"/>
			<a4j:actionparam name="zoom" assignTo="#{speedLimitChangeRequests.mapzoom}"/>
		</a4j:jsFunction>
	</a4j:form>	
	<a4j:form id="resetForm">
		<a4j:jsFunction name="reset" action="#{speedLimitChangeRequests.resetAction}" reRender="map-data,script">
		</a4j:jsFunction>
	</a4j:form>	
	
	<rich:modalPanel id="saveSlcrPanel" headerClass="popupHeader" controlsClass="popupControls" autosized="true">
      <f:facet name="header">
        <h:outputText value="#{messages.sbs_header}" />
      </f:facet>
      <f:facet name="controls">
        <h:graphicImage value="/images/modal_close.png" style="cursor:pointer" onclick="Richfaces.hideModalPanel('saveSlcrPanel')" />
      </f:facet>
      <rich:panel id="reRender">
 	<div><h:outputText value="#{speedLimitChangeRequests.message}" /></div>
  <a4j:form id="emailForm">
   <c:if test="#{!speedLimitChangeRequests.requestSent}">
    <h:inputText style="width:230px;margin:10px" id="email" label="#{messages.sbs_emailAddress}" value="#{speedLimitChangeRequests.emailAddress}" required="true" validator="#{speedLimitChangeRequests.validateEmail}"></h:inputText>
    <div>
      <rich:message for="email" errorClass="field-error" fatalClass="field-error" warnClass="field-warning" infoClass="field-info" styleClass="field-msg" />
    </div>
    <div class="popupactions">
      <button id="slcrpCancel" value="submit" class="left" onclick="Richfaces.hideModalPanel('saveSlcrPanel'); return false;"><span class="cancel"><h:outputText value="#{messages.button_cancel}" /></span></button>
      <a4j:commandButton id="slcrpSave" reRender="reRender" action="#{speedLimitChangeRequests.saveRequestsAction}" styleClass="left" onclick=""><span class="retrieve_password"><h:outputText value="#{messages.sbs_submit}" /></span></a4j:commandButton>
 	</div>
   </c:if>
   <c:if test="#{speedLimitChangeRequests.requestSent}">
      <div class="popupactions">
      	<a4j:commandButton id="slcrpReset" reRender="map-data,script,reRender" action="#{speedLimitChangeRequests.resetAction}" styleClass="left" onclick="Richfaces.hideModalPanel('saveSlcrPanel');"><span class="ok"><h:outputText value="#{messages.button_ok}" /></span></a4j:commandButton>
 	  </div>
   </c:if> 
  </a4j:form>
   
  </rich:panel>

	</rich:modalPanel>

	<script type="text/javascript">
		initMap();
		showSegments();
		addMarker();
	</script>
</ui:composition>	
</html>
