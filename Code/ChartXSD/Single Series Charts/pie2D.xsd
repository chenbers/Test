<?xml version="1.0" encoding="ISO-8859-1"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:element name="chart">
        <xs:complexType>
            <xs:sequence>
                <xs:choice minOccurs="0" maxOccurs="unbounded">
     <!-- define set element attributes -->
                    <xs:element name="set" minOccurs="0" maxOccurs="unbounded">
                        <xs:complexType>
                            <xs:attribute name="label" type="xs:string"/>
                            <xs:attribute name="isSliced" type="xs:boolean"/>
                            <xs:attribute name="value" type="xs:float"/>
                            <xs:attribute name="displayValue" type="xs:boolean"  />
                            <xs:attribute name="color" type="xs:hexBinary"/>
                            <xs:attribute name="link" type="xs:string"/>
                            <xs:attribute name="toolText" type="xs:string"/>
                            <xs:attribute name="showLabels" type="xs:boolean"/>
                            <xs:attribute name="borderColor" type="xs:boolean"/>
                            <xs:attribute name="borderAlpha" type="xs:boolean"/>
                            <xs:attribute name="alpha">             <!-- 0 to 100 -->
                                <xs:simpleType>
                                    <xs:restriction base="xs:nonNegativeInteger">
                                        <xs:maxExclusive value="101"/>
                                    </xs:restriction>
                                </xs:simpleType>
                            </xs:attribute>
                        </xs:complexType>
                    </xs:element>
      <!-- end of set element attributes -->

                </xs:choice>
                <!-- End of choice -->

    <!-- styles element -->
                <xs:element name="styles" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:sequence>
         <!-- style definition element -->
                            <xs:element name="definition" minOccurs="0" maxOccurs="unbounded">
                                <xs:complexType>
                                    <xs:sequence>
               <!-- styles definition style element -->
                                        <xs:element name="style" minOccurs="0" maxOccurs="unbounded">
                 <!-- style element attributes -->
                                            <xs:complexType>
                                                <xs:attribute name="name" type="xs:string"/>
                                                <xs:attribute name="type" type="xs:string"/>
                                                <xs:attribute name="font" type="xs:string"/>
                                                <xs:attribute name="size" type="xs:integer"/>
                                                <xs:attribute name="color" type="xs:hexBinary"/>
                                                <xs:attribute name="bold" type="xs:boolean"/>
                                                <xs:attribute name="italic" type="xs:boolean"/>
                                                <xs:attribute name="underline" type="xs:boolean"/>
                                                <xs:attribute name="bgColor" type="xs:hexBinary"/>
                                                <xs:attribute name="borderColor" type="xs:hexBinary"/>
                                                <xs:attribute name="letterSpacing" type="xs:integer"/>

                                                <xs:attribute name="param">
                                                    <xs:simpleType>
                                                        <xs:restriction base="xs:string">
                                                            <xs:enumeration value="_x"/>
                                                            <xs:enumeration value="_y"/>
                                                            <xs:enumeration value="_xScale"/>
                                                            <xs:enumeration value="_yScale"/>
                                                            <xs:enumeration value="_alpha"/>
                                                            <xs:enumeration value="_rotation"/>
                                                        </xs:restriction>
                                                    </xs:simpleType>
                                                </xs:attribute>
                                                <xs:attribute name="start" type="xs:integer"/>  <!-- this attribute got some string values too -->
                                                <xs:attribute name="duration" type="xs:nonNegativeInteger"/>
                                                <xs:attribute name="easing">      <!--  "elastic", "bounce", "regular", "strong" or "none" -->
                                                    <xs:simpleType>
                                                        <xs:restriction base="xs:string">
                                                            <xs:enumeration value="elastic"/>
                                                            <xs:enumeration value="bounce"/>
                                                            <xs:enumeration value="regular"/>
                                                            <xs:enumeration value="strong"/>
                                                            <xs:enumeration value="none"/>
                                                        </xs:restriction>
                                                    </xs:simpleType>
                                                </xs:attribute>
                                                <xs:attribute name="distance" type="xs:integer"/>
                                                <xs:attribute name="angle">
                                                    <xs:simpleType>
                                                        <xs:restriction base="xs:nonNegativeInteger">
                                                            <xs:maxExclusive value="361"/>
                                                        </xs:restriction>
                                                    </xs:simpleType>
                                                </xs:attribute>
                                                <xs:attribute name="alpha">
                                                    <xs:simpleType>
                                                        <xs:restriction base="xs:nonNegativeInteger">
                                                            <xs:maxExclusive value="101"/>
                                                        </xs:restriction>
                                                    </xs:simpleType>
                                                </xs:attribute>
                                                <xs:attribute name="blurX">
                                                    <xs:simpleType>
                                                        <xs:restriction base="xs:nonNegativeInteger">       <!-- 0 to 255 -->
                                                            <xs:maxExclusive value="256"/>
                                                        </xs:restriction>
                                                    </xs:simpleType>
                                                </xs:attribute>
                                                <xs:attribute name="blurY">                              <!-- 0 to 255 -->
                                                    <xs:simpleType>
                                                        <xs:restriction base="xs:nonNegativeInteger">
                                                            <xs:maxExclusive value="256"/>
                                                        </xs:restriction>
                                                    </xs:simpleType>
                                                </xs:attribute>
                                                <xs:attribute name="strength">                         <!-- 0 to 255 -->
                                                    <xs:simpleType>
                                                        <xs:restriction base="xs:nonNegativeInteger">
                                                            <xs:maxExclusive value="256"/>
                                                        </xs:restriction>
                                                    </xs:simpleType>
                                                </xs:attribute>
                                                <xs:attribute name="quality">                     <!-- 0 to 15 -->
                                                    <xs:simpleType>
                                                        <xs:restriction base="xs:nonNegativeInteger">
                                                            <xs:maxExclusive value="16"/>
                                                        </xs:restriction>
                                                    </xs:simpleType>
                                                </xs:attribute>
                                                <xs:attribute name="properties" type="xs:string"/>
                                                <xs:attribute name="shadowColor" type="xs:hexBinary"/>
                                                <xs:attribute name="shadowAlpha">
                                                    <xs:simpleType>
                                                        <xs:restriction base="xs:nonNegativeInteger">
                                                            <xs:maxExclusive value="101"/>
                                                        </xs:restriction>
                                                    </xs:simpleType>
                                                </xs:attribute>
                                                <xs:attribute name="highlightColor" type="xs:hexBinary"/>
                                                <xs:attribute name="highlightAlpha">                 <!-- 0 to 100 -->
                                                    <xs:simpleType>
                                                        <xs:restriction base="xs:nonNegativeInteger">
                                                            <xs:maxExclusive value="101"/>
                                                        </xs:restriction>
                                                    </xs:simpleType>
                                                </xs:attribute>
                                            </xs:complexType>
                   <!-- end of style element attributes -->
                                        </xs:element>
                 <!-- end of style element -->
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>
            <!-- end of defination element -->
            
            <!-- style application element  -->
                            <xs:element name="application" minOccurs="0" maxOccurs="unbounded">
                                <xs:complexType>
                                    <xs:sequence>
                <!-- style application apply element  -->
                                        <xs:element name="apply" minOccurs="0" maxOccurs="unbounded">
                                            <xs:complexType>
                                                <xs:attribute name="toObject" type="xs:string"/>
                                                <xs:attribute name="styles" type="xs:string"/>
                                            </xs:complexType>
                                        </xs:element>
                <!-- end of apply -->
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>
            <!-- end of application -->
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
    <!-- end of styles -->
            </xs:sequence>

    <!-- chart element attributes -->

            <xs:attribute name="bgImage" type="xs:string"/>
            <xs:attribute name="bgImageAlpha">               <!-- value (0 - 100) -->
                <xs:simpleType>
                    <xs:restriction base="xs:nonNegativeInteger">
                        <xs:maxExclusive value="101"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="bgImageDisplayMode">       <!-- stretch, fill, fit, center, tile, none   -->
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="stretch"/>
                        <xs:enumeration value="fill"/>
                        <xs:enumeration value="fit"/>
                        <xs:enumeration value="center"/>
                        <xs:enumeration value="tile"/>
                        <xs:enumeration value="none"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="bgImageHAlign">       <!-- left, middle, right   -->
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="left"/>
                        <xs:enumeration value="middle"/>
                        <xs:enumeration value="right"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="bgImageScale">               <!-- value (0 - 300 -->
                <xs:simpleType>
                    <xs:restriction base="xs:nonNegativeInteger">
                        <xs:maxExclusive value="301"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>

            <xs:attribute name="animation" type="xs:boolean"/>
            <xs:attribute name="palette">
                <xs:simpleType>
                    <xs:restriction base="xs:nonNegativeInteger">
                        <xs:maxExclusive value="6"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="paletteColors" type="xs:string"/>       <!-- 'FF0000,0372AB,FF5904...' -->
            <xs:attribute name="showAboutMenuItem" type="xs:boolean"/>
            <xs:attribute name="aboutMenuItemLabel" type="xs:string"/>
            <xs:attribute name="aboutMenuItemLink" type="xs:string"/>
            <xs:attribute name="showZeroPies" type="xs:boolean"/>
            <xs:attribute name="showPercentValues" type="xs:boolean"/>
            <xs:attribute name="showPercentInToolTip" type="xs:boolean"/>
            <xs:attribute name="showLabels" type="xs:boolean"/>
            <xs:attribute name="showValues" type="xs:boolean"/>
            <xs:attribute name="labelSepChar" type="xs:string"/>         <!-- 1 or above  -->
            <xs:attribute name="defaultAnimation" type="xs:boolean"/>
            <xs:attribute name="clickURL" type="xs:string"/>

    <!-- defining Chart Titles and Axis Names Attributes -->
            <xs:attribute name="caption" type="xs:string"/>
            <xs:attribute name="subCaption" type="xs:string"/>
	
    <!-- Chart Cosmetics Attributes -->
            <xs:attribute name="showBorder" type="xs:boolean"/>
            <xs:attribute name="borderColor" type="xs:hexBinary"/>
            <xs:attribute name="borderThickness" type="xs:positiveInteger"/>
            <xs:attribute name="canvasBorderAlpha">           <!-- value (0 - 100) -->
                <xs:simpleType>
                    <xs:restriction base="xs:nonNegativeInteger">
                        <xs:maxExclusive value="101"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="bgColor" type="xs:hexBinary"/>
            <xs:attribute name="bgAlpha">               <!-- value (0 - 100) -->
                <xs:simpleType>
                    <xs:restriction base="xs:nonNegativeInteger">
                        <xs:maxExclusive value="101"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="bgRatio">               <!-- value (0 - 100) -->
                <xs:simpleType>
                    <xs:restriction base="xs:nonNegativeInteger">
                        <xs:maxExclusive value="101"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="bgAngle">               <!-- value (0 - 360) -->
                <xs:simpleType>
                    <xs:restriction base="xs:nonNegativeInteger">
                        <xs:maxExclusive value="361"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="bgSWF" type="xs:string"/>
            <xs:attribute name="bgSWFAlpha">             <!-- value (0 - 100) -->
                <xs:simpleType>
                    <xs:restriction base="xs:nonNegativeInteger">
                        <xs:maxExclusive value="101"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="showVLineLabelBorder" type="xs:boolean"/>
            <xs:attribute name="logoURL" type="xs:string"/>
            <xs:attribute name="logoPosition">       <!-- logo position (TL, TR, BL, BR, CC)  -->
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="TL"/>
                        <xs:enumeration value="TR"/>
                        <xs:enumeration value="BL"/>
                        <xs:enumeration value="BR"/>
                        <xs:enumeration value="CC"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="logoAlpha">               <!-- value (0 - 100) -->
                <xs:simpleType>
                    <xs:restriction base="xs:nonNegativeInteger">
                        <xs:maxExclusive value="101"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="logoScale">               <!-- value (0 - 300) -->
                <xs:simpleType>
                    <xs:restriction base="xs:nonNegativeInteger">
                        <xs:maxExclusive value="301"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="logoLink" type="xs:string"/>
	
	
	<!-- Data Plot Cosmetics Attributes -->
            <xs:attribute name="showPlotBorder" type="xs:boolean"/>
            <xs:attribute name="plotBorderColor" type="xs:hexBinary"/>
            <xs:attribute name="plotBorderThickness">      <!-- value (0 - 5) -->
                <xs:simpleType>
                    <xs:restriction base="xs:nonNegativeInteger">
                        <xs:maxExclusive value="6"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="plotBorderAlpha">            <!-- value (0 - 100) -->
                <xs:simpleType>
                    <xs:restriction base="xs:nonNegativeInteger">
                        <xs:maxExclusive value="101"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="plotFillAlpha">      <!-- value (0 - 100) -->
                <xs:simpleType>
                    <xs:restriction base="xs:nonNegativeInteger">
                        <xs:maxExclusive value="101"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="showShadow" type="xs:boolean"/>
            <xs:attribute name="use3DLighting" type="xs:boolean"/>

	<!-- Pie / Doughnut Properties  -->
            <xs:attribute name="radius3D">
                <xs:simpleType>
                    <xs:restriction base="xs:nonNegativeInteger">
                        <xs:maxExclusive value="101"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="slicingDistance" type="xs:float"/>
            <xs:attribute name="pieRadius" type="xs:float"/>
            <xs:attribute name="startingAngle">
                <xs:simpleType>
                    <xs:restriction base="xs:nonNegativeInteger">
                        <xs:maxExclusive value="361"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="enableRotation" type="xs:boolean"/>

    <!--  Smart Lines & Labels   -->
            <xs:attribute name="enableSmartLabels" type="xs:boolean"/>
            <xs:attribute name="skipOverlapLabels" type="xs:boolean"/>
            <xs:attribute name="isSmartLineSlanted" type="xs:boolean"/>
            <xs:attribute name="smartLineColor" type="xs:boolean"/>
            <xs:attribute name="smartLineThickness" type="xs:boolean"/>
            <xs:attribute name="smartLineAlpha" type="xs:boolean"/>
            <xs:attribute name="labelDistance" type="xs:boolean"/>
            <xs:attribute name="smartLabelClearance" type="xs:boolean"/>

    <!-- Number Formatting Attributes -->
            <xs:attribute name="formatNumber" type="xs:boolean"/>
            <xs:attribute name="formatNumberScale" type="xs:boolean"/>
            <xs:attribute name="defaultNumberScale" type="xs:string"/>
            <xs:attribute name="numberScaleUnit" type="xs:string"/>
            <xs:attribute name="numberScaleValue" type="xs:string"/>
            <xs:attribute name="numberPrefix" type="xs:string"/>
            <xs:attribute name="numberSuffix" type="xs:string"/>
            <xs:attribute name="decimalSeparator" type="xs:string"/>
            <xs:attribute name="thousandSeparator" type="xs:string"/>
            <xs:attribute name="inDecimalSeparator" type="xs:string"/>
            <xs:attribute name="inThousandSeparator" type="xs:string"/>
            <xs:attribute name="decimals" type="xs:positiveInteger"/>
            <xs:attribute name="forceDecimals" type="xs:boolean"/>

	<!-- Font Properties Attributes -->
            <xs:attribute name="baseFont" type="xs:string"/>
            <xs:attribute name="baseFontSize">                    <!-- 0 to 72 -->
                <xs:simpleType>
                    <xs:restriction base="xs:nonNegativeInteger">
                        <xs:maxExclusive value="73"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="baseFontColor" type="xs:hexBinary"/>
            <xs:attribute name="outCnvBaseFont" type="xs:string"/>

	<!-- Legend Properties -->
            <xs:attribute name="showLegend" type="xs:boolean"/>
            <xs:attribute name="legendPosition" type="xs:string"/>
            <xs:attribute name="legendCaption" type="xs:string"/>
            <xs:attribute name="legendMarkerCircle" type="xs:boolean"/>
            <xs:attribute name="legendBgColor" type="xs:hexBinary"/>
            <xs:attribute name="legendBgAlpha" type="xs:integer"/>
            <xs:attribute name="legendBorderColor" type="xs:hexBinary"/>
            <xs:attribute name="legendBorderThickness" type="xs:integer"/>
            <xs:attribute name="legendBorderAlpha" type="xs:integer"/>
            <xs:attribute name="legendShadow" type="xs:boolean"/>
            <xs:attribute name="legendAllowDrag" type="xs:boolean"/>
            <xs:attribute name="legendScrollBgColor" type="xs:hexBinary"/>
            <xs:attribute name="legendScrollBarColor" type="xs:hexBinary"/>
            <xs:attribute name="legendScrollBtnColor" type="xs:hexBinary"/>
            <xs:attribute name="reverseLegend" type="xs:boolean"/>
            <xs:attribute name="interactiveLegend" type="xs:boolean"/>

	<!-- Tool-tip Attributes -->
            <xs:attribute name="showToolTip" type="xs:boolean"/>
            <xs:attribute name="toolTipBgColor" type="xs:hexBinary"/>
            <xs:attribute name="toolTipBorderColor" type="xs:hexBinary"/>
            <xs:attribute name="toolTipSepChar" type="xs:string"/>
            <xs:attribute name="showToolTipShadow" type="xs:boolean"/>

	<!-- Chart Padding & Margins Attributes -->
            <xs:attribute name="captionPadding" type="xs:nonNegativeInteger"/>
            <xs:attribute name="chartLeftMargin" type="xs:nonNegativeInteger"/>
            <xs:attribute name="chartRightMargin" type="xs:nonNegativeInteger"/>
            <xs:attribute name="chartTopMargin" type="xs:nonNegativeInteger"/>
            <xs:attribute name="chartBottomMargin" type="xs:nonNegativeInteger"/>

      <!-- Exporting charts as PDF/Images > XML Attributes -->
            <xs:attribute name="exportEnabled" type="xs:boolean"/>
            <xs:attribute name="exportShowMenuItem" type="xs:boolean"/>
            <xs:attribute name="exportFormats" type="xs:string"/>
            <xs:attribute name="exportAtClient" type="xs:boolean"/>
            <xs:attribute name="exportHandler" type="xs:string"/>
            <xs:attribute name="exportAction">       <!-- logo position ('save' or 'download')  -->
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="save"/>
                        <xs:enumeration value="download"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="exportTargetWindow">       <!-- logo position (_self or _blank)  -->
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="_self"/>
                        <xs:enumeration value="_blank"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="exportCallback" type="xs:string"/>
            <xs:attribute name="exportFileName" type="xs:string"/>
            <xs:attribute name="showExportDialog" type="xs:boolean"/>
            <xs:attribute name="exportDialogMessage" type="xs:string"/>
            <xs:attribute name="exportDialogColor" type="xs:hexBinary"/>
            <xs:attribute name="exportDialogBorderColor" type="xs:hexBinary"/>
            <xs:attribute name="exportDialogFontColor" type="xs:hexBinary"/>
            <xs:attribute name="exportDialogPBColor" type="xs:hexBinary"/>

        <!-- Setting up the chart to export data from context menu  -->
            <xs:attribute name="showExportDataMenuItem" type="xs:boolean"/>

        <!-- Customizing the output CSV format  -->
            <xs:attribute name="exportDataSeparator">       <!-- logo position ( {tab} or {quot} {apos} )  -->
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="{tab}"/>
                        <xs:enumeration value="{quot}"/>
                        <xs:enumeration value="{apos}"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="exportDataQualifier">       <!-- logo position ( {tab} or {quot} {apos} )  -->
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="{tab}"/>
                        <xs:enumeration value="{quot}"/>
                        <xs:enumeration value="{apos}"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="exportDataFormattedVal" type="xs:boolean"/>
     
        </xs:complexType>
    </xs:element>
</xs:schema>




